var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractValidationHandler.html",[0,0.079,1,2.69]],["body/classes/AbstractValidationHandler.html",[0,0.075,1,2.555,2,0.764,3,0.453,4,0.506,5,0.453,6,3.358,7,3.942,8,1.386,9,1.47,10,1.659,11,1.47,12,1.881,13,2.779,14,2.577,15,1.758,16,3.387,17,2.208,18,1.172,19,2.779,20,3.387,21,0.563,22,1.47,23,4.134,24,3.436,25,3.324,26,3.055,27,2.555,28,1.723,29,4.047,30,0.897,31,2.687,32,2.779,33,2.076,34,3.685,35,1.831,36,1.326,37,1.436,38,0.02,39,1.456,40,0.847,41,1.172,42,2.555,43,1.851,44,2.381,45,2.779,46,1.695,47,2.687,48,2.779,49,3.685,50,2.779,51,1.898,52,2.779,53,2.779,54,1.636,55,2.368,56,2.779,57,3.961,58,2.687,59,3.8,60,3.623,61,3.055,62,1.362,63,1.586,64,0.936,65,2.555,66,2.304,67,2.64,68,0.726,69,1.863,70,1.863,71,2.051,72,0.488,73,1.26,74,1.097,75,1.16,76,1.16,77,1.16,78,1.587,79,1.863,80,2.051,81,2.051,82,1.097,83,0.889,84,2.068,85,1.863,86,2.779,87,2.051,88,2.051,89,2.051,90,2.051,91,2.051,92,2.051,93,0.624,94,2.051,95,2.051,96,2.051,97,1.587,98,4.057,99,2.051,100,4.057,101,2.051,102,2.051,103,2.051,104,1.396,105,3.66,106,2.051,107,2.051,108,2.051,109,1.863,110,1.039,111,2.051,112,1.713,113,2.051,114,2.051,115,0.007,116,0.01,117,0.007]],["title/classes/CryptoHandler.html",[0,0.079,118,3.223]],["body/classes/CryptoHandler.html",[0,0.095,2,1.451,3,0.861,4,0.961,5,0.861,6,3.661,8,2.634,9,1.873,10,1.695,20,3.95,21,1.069,22,2.274,27,3.95,28,1.857,29,4.253,30,0.861,37,1.38,38,0.018,39,1.247,40,0.814,41,1.126,42,3.254,43,1.778,44,2.274,72,0.519,115,0.013,116,0.016,117,0.013,118,4.731,119,5.313,120,5.104,121,5.104,122,4.377,123,5.104]],["title/interceptors/DefaultOAuthInterceptor.html",[124,3.619,125,2.927]],["body/interceptors/DefaultOAuthInterceptor.html",[0,0.06,3,0.544,4,0.607,5,0.544,14,1.563,21,0.675,22,1.679,28,0.829,30,0.772,37,1.237,38,0.02,39,1.118,40,0.73,41,1.277,43,1.123,55,2.704,68,1.805,72,0.328,84,2.745,93,1.062,104,2.366,115,0.008,116,0.012,117,0.008,125,3.173,126,2.764,127,4.562,128,2.764,129,5.32,130,2.361,131,3.224,132,2.017,133,2.055,134,4.562,135,3.421,136,4.562,137,3.421,138,3.224,139,3.924,140,2.764,141,4.966,142,4.67,143,4.966,144,3.224,145,4.562,146,3.143,147,3.173,148,1.905,149,2.764,150,3.924,151,1.663,152,3.924,153,2.236,154,3.224,155,3.224,156,2.764,157,2.764,158,3.224,159,2.764,160,3.224,161,2.236,162,0.788,163,1.067,164,2.055,165,2.917,166,2.462,167,2.764,168,2.236,169,3.369,170,2.764,171,2.764,172,4.241,173,2.764,174,1.316,175,3.224,176,3.224,177,3.924,178,2.764,179,2.764,180,0.748,181,2.764,182,2.764,183,4.562,184,2.764,185,2.764,186,2.917,187,2.764,188,4.576,189,4.576,190,3.924,191,3.224,192,3.224,193,1.512,194,1.247,195,3.224,196,3.224,197,2.764,198,1.776,199,3.224,200,3.224,201,3.224,202,3.224,203,3.224,204,3.224,205,2.764,206,3.924,207,3.224,208,2.764]],["title/classes/JwksValidationHandler.html",[0,0.079,209,2.494]],["body/classes/JwksValidationHandler.html",[0,0.036,1,3.502,2,0.554,3,0.329,4,0.367,5,0.329,6,3.09,8,1.005,9,1.147,10,1.093,16,1.992,18,0.43,20,2.853,21,0.408,22,1.147,23,3.104,24,2.68,25,2.167,26,2.853,27,2.494,28,1.746,29,3.64,30,0.994,32,1.351,33,1.363,34,2.167,35,2.045,36,0.645,37,1.485,38,0.02,39,1.395,40,0.939,41,1.212,42,1.992,43,1.913,44,2.016,45,1.351,46,1.272,48,1.351,49,3.626,50,1.351,51,1.563,52,1.351,53,1.351,54,0.796,55,1.846,56,1.351,57,3.48,59,2.853,60,1.242,61,2.494,62,0.554,63,0.645,64,1.363,65,1.242,66,1.671,67,2.699,68,0.845,72,0.198,74,0.796,78,3.246,79,1.351,86,1.351,93,0.452,104,2.105,109,3.397,110,2.023,115,0.01,116,0.013,117,0.005,122,2.68,163,1.481,164,1.242,172,1.351,194,1.209,209,1.846,210,4.484,211,2.664,212,1.23,213,3.838,214,3.125,215,2.167,216,2.919,217,0.763,218,2.167,219,1.169,220,1.057,221,1.992,222,1.209,223,3.912,224,3.912,225,3.125,226,1.932,227,3.125,228,3.125,229,3.125,230,3.125,231,3.125,232,3.125,233,3.125,234,3.125,235,3.125,236,3.125,237,3.125,238,1.949,239,3.125,240,0.891,241,3.125,242,3.104,243,3.125,244,2.68,245,3.125,246,3.125,247,2.167,248,1.949,249,3.125,250,1.949,251,1.949,252,3.125,253,5.71,254,1.949,255,4.476,256,1.949,257,1.949,258,1.949,259,1.949,260,1.949,261,1.949,262,1.949,263,3.125,264,1.949,265,1.488,266,3.125,267,3.912,268,4.201,269,1.949,270,1.949,271,3.125,272,3.125,273,1.949,274,1.949,275,2.987,276,1.949,277,1.949,278,1.949,279,5.71,280,1.949,281,1.949,282,1.949,283,1.949,284,3.125,285,3.125,286,3.912,287,1.949,288,1.949,289,1.949,290,1.671,291,1.949,292,3.912,293,3.104,294,4.476,295,4.476,296,2.167,297,1.242,298,1.074,299,1.949,300,1.949,301,1.949,302,1.949,303,1.949,304,1.949,305,1.949,306,1.088,307,1.488,308,0.613,309,3.125,310,1.949,311,3.125,312,1.949,313,1.949,314,1.949,315,3.125,316,1.949,317,1.949,318,1.949,319,1.671,320,1.949,321,1.949,322,1.949,323,1.722,324,1.949,325,1.949,326,1.488,327,1.949,328,1.949,329,1.949,330,1.949,331,1.949,332,1.949,333,1.949,334,1.949]],["title/classes/LoginOptions.html",[0,0.079,335,2.047]],["body/classes/LoginOptions.html",[0,0.087,2,0.599,3,0.561,4,0.397,5,0.356,9,0.773,10,1.512,11,0.773,12,1.363,15,1.1,18,1.193,21,0.441,28,1.919,30,0.913,33,2.045,35,0.963,38,0.02,40,0.812,41,1.415,44,0.773,46,1.447,51,0.994,54,1.358,62,1.538,63,0.697,64,0.734,72,0.597,73,1.601,74,1.358,75,0.91,76,0.91,77,0.91,82,1.358,83,1.548,93,1.256,115,0.005,116,0.009,117,0.005,132,0.734,133,1.781,162,0.813,163,1.1,174,1.682,180,0.772,193,1.33,194,1.287,212,1.046,216,0.963,217,1.322,219,0.63,220,0.57,222,1.287,226,0.91,240,1.52,306,1.885,308,0.663,335,1.613,336,1.087,337,0.599,338,1.807,339,2.107,340,1.883,341,1.998,342,2.126,343,2.126,344,1.883,345,2.126,346,2.107,347,1.1,348,2.847,349,1.601,350,2.398,351,1.716,352,1.358,353,1.716,354,1.52,355,1.716,356,2.107,357,1.613,358,0.899,359,2.198,360,2.268,361,1.52,362,1.613,363,1.613,364,1.52,365,1.716,366,1.202,367,2.414,368,1.613,369,1.716,370,1.716,371,2.626,372,2.107,373,2.019,374,1.716,375,1.158,376,1.613,377,1.716,378,2.792,379,1.91,380,2.107,381,1.52,382,1.998,383,2.107,384,1.716,385,1.435,386,1.716,387,1.52,388,1.613,389,1.435,390,1.716,391,1.716,392,2.107,393,1.435,394,1.716,395,2.469,396,3.118,397,0.963,398,0.734,399,1.087,400,1.716,401,0.963,402,0.773,403,0.861,404,0.963,405,0.963,406,1.022,407,0.963,408,1.087,409,2.627,410,1.087,411,1.087,412,1.087,413,1.087,414,1.087,415,0.91,416,1.087,417,0.697,418,0.861,419,0.861,420,0.861,421,1.087,422,1.022,423,1.087,424,0.734,425,1.087,426,1.087,427,0.963,428,2.627,429,0.963,430,1.087,431,1.022,432,1.087,433,1.087,434,1.087,435,1.716,436,1.435,437,1.716,438,1.682,439,1.613,440,1.087,441,1.022,442,1.087,443,1.087,444,1.022,445,0.697,446,0.663,447,1.087,448,0.963,449,1.087,450,0.63,451,1.022,452,0.773,453,1.087,454,1.087,455,1.087,456,1.087,457,1.087,458,1.087,459,1.087,460,1.087,461,1.087,462,1.087,463,1.087,464,1.087,465,1.087,466,1.087,467,1.087,468,1.087,469,1.087,470,1.087,471,1.087,472,1.087,473,1.087,474,1.087,475,1.087,476,1.087,477,1.087,478,1.087,479,1.087,480,1.087]],["title/classes/NullValidationHandler.html",[0,0.079,481,2.927]],["body/classes/NullValidationHandler.html",[0,0.083,2,1.268,3,0.752,4,0.84,5,0.752,6,3.709,8,2.301,9,1.636,12,2.077,14,2.763,16,3.632,21,0.934,22,2.09,26,3.632,30,0.961,37,1.54,38,0.019,39,1.392,40,0.908,41,1.256,43,1.984,44,2.427,57,4.292,65,3.632,68,1.205,72,0.454,85,3.951,104,1.984,115,0.012,116,0.015,117,0.012,164,4.001,211,3.488,349,1.791,481,3.951,482,5.383,483,4.885,484,4.35,485,5.697,486,4.35,487,5.697,488,4.46,489,4.46,490,4.46,491,4.46]],["title/classes/OAuthErrorEvent.html",[0,0.079,492,2.494]],["body/classes/OAuthErrorEvent.html",[0,0.12,2,1.163,3,1.016,4,0.771,5,0.69,10,1,30,0.69,37,1.106,38,0.02,39,1,40,1.06,41,0.903,46,1.941,64,2.098,72,0.677,115,0.011,116,0.014,117,0.011,130,2.78,198,2.255,221,4.08,424,2.098,492,3.183,493,2.609,494,4.24,495,4.177,496,4.438,497,4.177,498,4.093,499,2.418,500,2.609,501,2.609,502,2.418,503,2.609,504,2.609,505,2.418,506,2.609,507,2.609,508,2.609,509,2.609,510,2.609,511,2.609,512,2.418,513,2.418,514,2.609,515,2.418,516,2.609,517,2.418,518,2.418,519,2.112,520,2.838,521,2.609,522,4.439,523,4.177,524,2.609]],["title/classes/OAuthEvent.html",[0,0.079,494,2.69]],["body/classes/OAuthEvent.html",[0,0.121,2,1.19,3,1.028,4,0.788,5,0.706,10,1.023,30,0.706,37,1.131,38,0.02,39,1.023,40,1.068,41,0.923,46,1.554,64,1.458,72,0.682,115,0.011,116,0.014,117,0.011,130,2.821,198,2.306,221,3.882,424,2.121,492,2.473,493,2.668,494,4.271,495,4.223,496,4.462,497,2.903,499,2.473,500,2.668,501,2.668,502,2.473,503,2.668,504,2.668,505,2.473,506,2.668,507,2.668,508,2.668,509,2.668,510,2.668,511,2.668,512,2.473,513,2.473,514,2.668,515,2.473,516,2.668,517,2.473,518,2.473,519,2.16,520,2.903,521,2.668,522,4.478,523,4.223,524,2.668,525,4.186]],["title/classes/OAuthInfoEvent.html",[0,0.079,524,2.69]],["body/classes/OAuthInfoEvent.html",[0,0.12,2,1.179,3,1.127,4,0.781,5,0.7,10,1.013,30,0.7,37,1.121,38,0.02,39,1.013,40,1.065,41,0.915,46,1.545,64,1.445,72,0.68,115,0.011,116,0.014,117,0.011,130,2.805,198,2.285,221,4.102,424,2.112,492,2.451,493,2.644,494,4.258,495,4.205,496,4.452,497,2.876,499,2.451,500,2.644,501,2.644,502,2.451,503,2.644,504,2.644,505,2.451,506,2.644,507,2.644,508,2.644,509,2.644,510,2.644,511,2.644,512,2.451,513,2.451,514,2.644,515,2.451,516,2.644,517,2.451,518,2.451,519,2.14,520,2.876,521,2.644,522,4.462,523,4.205,524,3.465,526,4.148]],["title/classes/OAuthLogger.html",[0,0.079,407,1.929]],["body/classes/OAuthLogger.html",[0,0.089,2,0.623,3,0.807,4,0.413,5,0.37,9,0.805,10,1.705,11,1.259,12,0.726,15,0.726,18,0.932,21,0.459,22,1.259,28,1.922,30,0.876,33,1.665,37,1.403,38,0.02,39,1.268,40,0.827,41,1.145,43,1.808,44,0.805,46,1.564,51,1.026,54,1.401,62,1.359,63,0.726,64,0.764,72,0.606,73,1.73,74,1.401,75,0.946,76,0.946,77,0.946,82,0.895,83,1.399,93,0.981,115,0.006,116,0.009,117,0.006,132,0.764,133,1.632,162,0.536,163,1.399,174,1.401,180,0.509,193,1.202,194,0.848,212,0.69,216,1.002,217,1.033,219,0.656,220,0.593,240,1.568,306,1.472,308,0.69,335,1.063,336,1.131,340,1.002,341,1.063,342,1.131,343,1.131,344,1.002,345,1.131,347,0.726,348,2.319,349,1.329,350,1.952,351,1.131,352,0.895,353,1.131,354,1.002,355,1.131,357,1.063,358,0.593,359,2.064,360,1.664,361,1.002,362,1.063,363,1.063,364,1.002,365,1.131,366,0.882,367,2.467,368,1.063,369,1.131,370,1.131,373,1.481,374,1.131,375,0.764,376,1.063,377,2.839,378,2.181,379,1.401,381,1.002,382,1.664,384,1.131,385,0.946,386,1.131,387,1.002,388,1.063,389,0.946,390,1.131,391,1.131,393,0.946,394,1.131,395,2.517,396,3.432,397,1.568,398,1.195,399,1.77,400,2.181,401,1.568,402,1.259,403,1.401,404,1.568,405,1.568,406,1.664,407,1.568,408,1.77,409,3.468,410,1.77,411,1.77,412,1.77,413,1.77,414,1.131,415,0.946,416,1.131,417,0.726,418,0.895,419,0.895,420,0.895,421,1.131,422,1.063,423,1.131,424,0.764,425,1.131,426,1.131,427,1.002,428,2.678,429,1.002,430,1.131,431,1.063,432,1.131,433,1.131,434,1.131,435,1.77,436,1.481,437,1.77,438,1.726,439,1.664,440,1.131,441,1.063,442,1.131,443,1.131,444,1.063,445,0.726,446,0.69,447,1.131,448,1.002,449,1.131,450,0.656,451,1.063,452,0.805,453,1.131,454,1.131,455,1.131,456,1.131,457,1.131,458,1.131,459,1.131,460,1.131,461,1.131,462,1.131,463,1.131,464,1.131,465,1.131,466,1.131,467,1.131,468,1.131,469,1.131,470,1.131,471,1.131,472,1.131,473,1.131,474,1.131,475,1.131,476,1.131,477,1.131,478,1.131,479,1.131,480,1.131,527,3.431,528,2.62,529,3.431,530,2.193,531,4.45,532,2.193,533,2.193,534,2.193,535,2.193]],["title/modules/OAuthModule.html",[536,3.223,537,2.69]],["body/modules/OAuthModule.html",[0,0.067,3,0.604,4,0.675,5,0.604,7,2.484,12,1.63,22,1.314,30,0.604,35,1.637,37,0.968,38,0.02,39,0.875,40,0.571,41,0.79,43,1.248,68,1.962,72,0.364,93,0.832,104,1.248,115,0.009,116,0.013,117,0.009,118,3.761,119,3.071,125,3.416,132,1.716,133,1.549,135,2.91,137,3.756,148,2.116,151,1.848,162,0.875,163,1.185,164,4.052,165,3.865,166,2.735,167,3.071,168,2.484,180,0.832,193,1.723,209,2.91,210,3.071,211,2.389,226,1.546,402,2.469,407,2.251,424,1.716,481,3.904,482,3.071,537,3.589,538,2.735,539,4.926,540,3.582,541,4.926,542,4.926,543,3.582,544,6.063,545,3.582,546,2.905,547,5.63,548,4.299,549,4.926,550,3.071,551,4.926,552,2.735,553,3.761,554,3.582,555,3.14,556,3.582,557,3.582,558,3.582,559,4.224,560,4.224,561,3.582,562,2.735,563,2.484,564,3.071,565,2.283,566,4.224,567,5.199,568,3.582,569,3.582]],["title/classes/OAuthModuleConfig.html",[0,0.079,137,2.494]],["body/classes/OAuthModuleConfig.html",[0,0.115,2,1.427,3,0.847,4,0.945,5,0.847,10,1.499,21,1.051,28,1.29,30,0.847,38,0.019,40,0.8,63,1.661,72,0.624,93,1.166,115,0.013,116,0.016,117,0.013,137,3.624,174,2.505,180,1.166,186,3.91,217,1.227,222,2.373,349,1.579,570,5.26,571,4.305,572,4.594,573,5.058,574,5.021,575,3.481,576,4.305,577,4.305,578,4.305,579,3.834,580,3.2,581,3.481,582,3.481,583,4.305]],["title/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.079,555,2.69]],["body/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.113,2,1.385,3,0.822,4,0.918,5,0.822,8,2.515,10,1.472,14,2.921,21,1.021,22,2.21,30,0.822,37,1.317,38,0.019,39,1.191,40,0.777,41,1.075,43,1.698,68,1.628,72,0.613,104,1.698,115,0.013,116,0.016,117,0.013,135,3.863,146,4.035,151,2.515,153,3.38,162,1.472,163,1.993,555,3.84,584,5.165,585,5.165,586,4.992,587,5.358,588,4.874,589,4.179,590,4.179,591,4.179]],["title/classes/OAuthResourceServerConfig.html",[0,0.079,573,3.223]],["body/classes/OAuthResourceServerConfig.html",[0,0.109,2,1.316,3,0.781,4,0.872,5,0.781,10,1.425,21,0.969,28,1.19,30,1.078,38,0.019,40,1.018,41,1.479,63,1.93,72,0.594,93,1.354,115,0.012,116,0.015,117,0.012,137,2.735,174,2.608,180,1.075,186,4.406,217,1.425,222,2.256,349,1.834,371,2.95,570,5.749,571,3.969,572,3.21,573,4.877,575,4.045,576,5.001,577,5.001,578,5.001,579,4.454,580,3.718,581,4.429,582,4.045,583,5.476,592,4.629,593,4.629,594,4.629]],["title/classes/OAuthResourceServerErrorHandler.html",[0,0.079,135,2.494]],["body/classes/OAuthResourceServerErrorHandler.html",[0,0.113,2,1.385,3,0.822,4,0.918,5,0.822,8,2.515,10,1.668,14,2.364,21,1.021,22,2.21,30,0.822,37,1.317,38,0.019,39,1.191,40,0.777,41,1.075,43,1.698,68,1.628,72,0.613,104,1.698,115,0.013,116,0.016,117,0.013,135,3.863,146,4.035,151,2.515,153,3.38,162,1.472,163,1.993,555,3.107,584,5.165,585,5.165,586,4.992,587,5.358,589,4.179,590,4.179,591,4.179,595,4.874]],["title/classes/OAuthStorage.html",[0,0.079,132,1.47]],["body/classes/OAuthStorage.html",[0,0.092,2,0.652,3,0.6,4,0.432,5,0.387,9,0.842,10,1.672,11,0.842,12,0.759,15,0.759,18,0.959,21,0.48,22,1.304,28,1.943,30,0.734,33,1.706,37,1.176,38,0.02,39,1.063,40,0.694,41,0.959,43,1.515,44,0.842,46,1.507,51,1.062,54,1.451,62,1.393,63,0.759,64,0.799,72,0.615,73,1.667,74,1.451,75,0.99,76,0.99,77,0.99,82,0.937,83,1.621,93,1.01,115,0.006,116,0.009,117,0.006,132,1.238,133,1.541,162,0.56,163,0.759,174,1.451,180,0.533,193,1.237,194,0.888,212,0.721,216,2.239,217,1.063,219,0.686,220,0.62,240,1.624,306,1.515,308,0.721,335,1.112,336,1.184,340,1.048,341,1.112,342,1.184,343,1.184,344,1.048,345,1.184,347,0.759,348,2.376,349,1.541,350,2.001,351,1.184,352,0.937,353,1.184,354,1.048,355,1.184,357,1.112,358,0.62,359,2.115,360,1.723,361,1.048,362,1.112,363,1.112,364,1.048,365,1.184,366,0.913,367,2.528,368,1.112,369,1.184,370,1.184,373,1.534,374,1.184,375,0.799,376,1.112,377,1.184,378,2.245,379,1.451,381,1.048,382,1.723,384,1.184,385,0.99,386,1.184,387,1.048,388,1.112,389,0.99,390,1.184,391,1.184,393,0.99,394,1.184,395,2.57,396,3.33,397,1.048,398,0.799,399,1.184,400,2.245,401,1.048,402,0.842,403,0.937,404,1.048,405,1.048,406,1.112,407,1.048,408,1.184,409,2.735,410,1.184,411,1.184,412,1.184,413,1.184,414,1.834,415,1.534,416,1.834,417,1.176,418,1.451,419,1.451,420,1.451,421,1.834,422,1.723,423,1.834,424,1.238,425,1.834,426,1.834,427,1.988,428,2.735,429,1.048,430,1.184,431,1.112,432,1.184,433,1.184,434,1.184,435,1.834,436,1.534,437,1.834,438,1.776,439,1.723,440,1.184,441,1.112,442,1.184,443,1.184,444,1.112,445,0.759,446,0.721,447,1.184,448,1.048,449,1.184,450,0.686,451,1.112,452,0.842,453,1.184,454,1.184,455,1.184,456,1.184,457,1.184,458,1.184,459,1.184,460,1.184,461,1.184,462,1.184,463,1.184,464,1.184,465,1.184,466,1.184,467,1.184,468,1.184,469,1.184,470,1.184,471,1.184,472,1.184,473,1.184,474,1.184,475,1.184,476,1.184,477,1.184,478,1.184,479,1.184,480,1.184,596,3.554,597,3.554,598,3.554,599,2.294,600,2.294,601,2.294]],["title/classes/OAuthSuccessEvent.html",[0,0.079,521,2.69]],["body/classes/OAuthSuccessEvent.html",[0,0.12,2,1.179,3,1.127,4,0.781,5,0.7,10,1.013,30,0.7,37,1.121,38,0.02,39,1.013,40,1.065,41,0.915,46,1.545,64,1.445,72,0.68,115,0.011,116,0.014,117,0.011,130,2.805,198,2.285,221,4.102,424,2.112,492,2.451,493,2.644,494,4.258,495,4.205,496,4.452,497,2.876,499,2.451,500,2.644,501,2.644,502,2.451,503,2.644,504,2.644,505,2.451,506,2.644,507,2.644,508,2.644,509,2.644,510,2.644,511,2.644,512,2.451,513,2.451,514,2.644,515,2.451,516,2.644,517,2.451,518,2.451,519,2.14,520,2.876,521,3.465,522,4.462,523,4.205,524,2.644,602,4.148]],["title/interfaces/OidcDiscoveryDoc.html",[73,1.327,451,2.047]],["body/interfaces/OidcDiscoveryDoc.html",[0,0.084,3,0.53,4,0.37,5,0.331,9,0.72,10,1.48,11,0.72,12,0.65,15,0.65,18,0.867,21,0.411,28,1.969,33,1.566,38,0.02,40,1.138,44,0.72,46,1.398,51,0.94,54,1.284,62,1.278,63,0.65,64,0.684,72,0.583,73,1.546,74,1.284,75,0.847,76,0.847,77,0.847,82,0.802,83,1.301,93,0.913,115,0.005,116,0.008,117,0.005,132,0.684,133,1.413,162,0.48,163,0.65,174,1.835,180,0.456,193,1.118,194,0.76,212,0.617,216,0.897,217,0.961,219,0.94,220,0.85,222,1.216,240,1.437,306,1.369,308,0.617,335,0.952,336,1.013,340,0.897,341,0.952,342,1.013,343,1.013,344,0.897,345,1.013,347,0.65,348,2.18,349,1.236,350,1.835,351,1.013,352,0.802,353,1.013,354,0.897,355,1.013,357,0.952,358,0.531,359,1.94,360,1.524,361,0.897,362,0.952,363,0.952,364,0.897,365,1.013,366,0.808,367,2.029,368,0.952,369,1.013,370,1.013,373,1.357,374,1.013,375,0.684,376,0.952,377,1.013,378,2.029,379,1.284,381,0.897,382,1.524,384,1.013,385,0.847,386,1.013,387,0.897,388,0.952,389,0.847,390,1.013,391,1.013,393,0.847,394,1.013,395,2.385,396,3.047,397,0.897,398,0.684,399,1.013,400,1.622,401,0.897,402,0.72,403,0.802,404,0.897,405,0.897,406,0.952,407,0.897,408,1.013,409,2.537,410,1.013,411,1.013,412,1.013,413,1.013,414,1.013,415,0.847,416,1.013,417,0.65,418,0.802,419,0.802,420,0.802,421,1.013,422,0.952,423,1.013,424,0.684,425,1.013,426,1.013,427,0.897,428,2.707,429,0.897,430,1.013,431,0.952,432,1.013,433,1.013,434,1.013,435,1.622,436,1.357,437,1.622,438,1.835,439,1.524,440,1.013,441,0.952,442,1.013,443,1.013,444,0.952,445,0.65,446,0.617,447,1.013,448,0.897,449,1.013,450,0.94,451,1.524,452,1.649,453,2.319,454,2.319,455,2.319,456,2.319,457,2.319,458,2.319,459,2.319,460,2.319,461,2.319,462,2.319,463,2.319,464,2.319,465,2.319,466,2.319,467,2.319,468,2.319,469,2.319,470,2.319,471,2.319,472,2.319,473,2.319,474,2.319,475,2.319,476,2.319,477,2.319,478,2.319,479,2.319,480,2.319,603,1.16]],["title/interfaces/ParsedIdToken.html",[73,1.327,431,2.047]],["body/interfaces/ParsedIdToken.html",[0,0.093,3,0.616,4,0.447,5,0.401,9,0.871,10,1.563,11,0.871,12,0.786,15,0.786,18,0.98,21,0.497,28,1.943,33,1.738,38,0.02,40,0.906,44,0.871,46,1.782,51,1.329,54,1.815,62,1.418,63,0.786,64,0.827,72,0.622,73,1.693,74,2.199,75,1.025,76,2.153,77,2.153,82,0.969,83,1.471,93,1.032,115,0.006,116,0.009,117,0.006,132,0.827,133,1.569,162,0.58,163,0.786,174,1.49,180,0.551,193,1.264,194,0.918,212,0.747,216,1.085,217,1.086,219,0.71,220,0.642,222,1.412,240,2.28,306,1.548,308,0.747,335,1.151,336,1.225,340,1.085,341,1.151,342,1.225,343,1.225,344,1.085,345,1.225,347,0.786,348,2.419,349,1.398,350,2.037,351,1.225,352,0.969,353,1.225,354,1.085,355,1.225,357,1.151,358,0.642,359,2.153,360,1.77,361,1.085,362,1.151,363,1.151,364,1.085,365,1.225,366,0.938,367,2.294,368,1.151,369,1.225,370,1.225,373,1.575,374,1.225,375,0.827,376,1.151,377,1.225,378,2.294,379,1.49,381,1.085,382,2.156,384,1.225,385,1.025,386,1.225,387,1.085,388,1.151,389,1.025,390,1.225,391,1.225,393,1.025,394,1.225,395,2.611,396,3.234,397,1.085,398,0.827,399,1.225,400,1.883,401,1.085,402,0.871,403,0.969,404,1.085,405,1.085,406,1.151,407,1.085,408,1.225,409,2.778,410,1.225,411,1.225,412,1.225,413,1.225,414,1.225,415,1.025,416,1.225,417,0.786,418,0.969,419,0.969,420,0.969,421,1.225,422,1.151,423,1.225,424,0.827,425,1.225,426,1.225,427,1.085,428,2.933,429,1.085,430,1.225,431,1.77,432,2.574,433,2.574,434,2.574,435,1.883,436,1.575,437,1.883,438,1.815,439,1.77,440,1.225,441,1.151,442,1.225,443,1.225,444,1.151,445,0.786,446,0.747,447,1.225,448,1.085,449,1.225,450,0.71,451,1.151,452,0.871,453,1.225,454,1.225,455,1.225,456,1.225,457,1.225,458,1.225,459,1.225,460,1.225,461,1.225,462,1.225,463,1.225,464,1.225,465,1.225,466,1.225,467,1.225,468,1.225,469,1.225,470,1.225,471,1.225,472,1.225,473,1.225,474,1.225,475,1.225,476,1.225,477,1.225,478,1.225,479,1.225,480,1.225,603,1.403]],["title/classes/ReceivedTokens.html",[0,0.079,395,2.047]],["body/classes/ReceivedTokens.html",[0,0.094,2,0.679,3,0.619,4,0.45,5,0.403,9,0.877,10,1.566,11,0.877,12,0.791,15,0.791,18,0.984,21,0.5,28,1.939,30,0.845,33,1.744,38,0.02,40,0.798,41,1.104,44,0.877,46,1.62,51,1.096,54,1.822,62,1.62,63,0.791,64,0.832,72,0.623,73,1.698,74,2.044,75,1.926,76,1.031,77,1.031,82,0.976,83,1.656,93,1.036,115,0.006,116,0.01,117,0.006,132,0.832,133,1.574,162,0.584,163,0.791,174,1.498,180,0.555,193,1.423,194,0.924,212,0.751,216,1.092,217,1.09,219,0.714,220,0.646,222,1.419,240,1.676,306,1.555,308,1.153,335,1.159,336,1.233,340,1.092,341,1.159,342,1.233,343,1.233,344,1.092,345,1.233,347,0.791,348,2.428,349,1.403,350,2.044,351,1.233,352,0.976,353,1.233,354,1.092,355,1.233,357,1.159,358,0.646,359,2.561,360,1.778,361,1.092,362,1.159,363,1.159,364,1.092,365,1.233,366,0.943,367,2.303,368,1.159,369,1.233,370,1.233,373,1.583,374,1.233,375,0.832,376,1.159,377,1.233,378,2.303,379,1.498,381,1.092,382,1.778,384,1.233,385,1.031,386,1.233,387,1.092,388,1.159,389,1.031,390,1.233,391,1.233,393,1.031,394,1.233,395,2.764,396,3.24,397,1.092,398,0.832,399,1.233,400,1.892,401,1.092,402,0.877,403,0.976,404,1.092,405,1.092,406,1.159,407,1.092,408,1.233,409,2.786,410,1.233,411,1.233,412,1.233,413,1.233,414,1.233,415,1.031,416,1.233,417,0.791,418,0.976,419,0.976,420,0.976,421,1.233,422,1.159,423,1.233,424,0.832,425,1.233,426,1.233,427,1.092,428,2.941,429,1.676,430,2.303,431,1.159,432,1.233,433,1.233,434,1.233,435,1.892,436,1.583,437,1.892,438,1.822,439,1.778,440,1.233,441,1.159,442,1.233,443,1.233,444,1.159,445,0.791,446,0.751,447,1.233,448,1.092,449,1.233,450,0.714,451,1.159,452,0.877,453,1.233,454,1.233,455,1.233,456,1.233,457,1.233,458,1.233,459,1.233,460,1.233,461,1.233,462,1.233,463,1.233,464,1.233,465,1.233,466,1.233,467,1.233,468,1.233,469,1.233,470,1.233,471,1.233,472,1.233,473,1.233,474,1.233,475,1.233,476,1.233,477,1.233,478,1.233,479,1.233,480,1.233,604,2.39,605,2.39,606,2.39,607,2.39]],["title/interfaces/TokenResponse.html",[73,1.327,441,2.047]],["body/interfaces/TokenResponse.html",[0,0.092,3,0.608,4,0.44,5,0.394,9,0.857,10,1.556,11,0.857,12,0.773,15,0.773,18,0.97,21,0.489,28,1.949,33,1.723,38,0.02,40,0.938,41,0.795,44,0.857,46,1.519,51,1.597,54,1.471,62,1.406,63,1.636,64,0.813,72,0.618,73,1.68,74,1.471,75,1.008,76,1.008,77,1.008,82,0.953,83,1.455,93,1.021,115,0.006,116,0.009,117,0.006,132,0.813,133,1.555,162,0.57,163,0.773,174,1.471,180,0.542,193,1.406,194,0.903,212,0.734,216,1.067,217,1.075,219,0.698,220,0.631,222,1.394,240,2.26,306,1.532,308,0.734,335,1.132,336,1.205,340,1.067,341,1.132,342,1.205,343,1.205,344,1.067,345,1.205,347,0.773,348,2.398,349,1.383,350,2.019,351,1.205,352,0.953,353,1.205,354,1.067,355,1.205,357,1.132,358,0.631,359,2.54,360,1.747,361,1.067,362,1.132,363,1.132,364,1.067,365,1.205,366,0.926,367,2.27,368,1.132,369,1.205,370,1.205,373,1.555,374,1.205,375,0.813,376,1.132,377,1.205,378,2.27,379,1.471,381,1.067,382,1.747,384,1.205,385,1.008,386,1.205,387,1.067,388,1.132,389,1.008,390,1.205,391,1.205,393,1.008,394,1.205,395,2.591,396,3.218,397,1.067,398,0.813,399,1.205,400,1.859,401,1.067,402,0.857,403,0.953,404,1.067,405,1.067,406,1.132,407,1.067,408,1.205,409,2.757,410,1.205,411,1.205,412,1.205,413,1.205,414,1.205,415,1.008,416,1.205,417,0.773,418,0.953,419,0.953,420,0.953,421,1.205,422,1.132,423,1.205,424,0.813,425,1.205,426,1.205,427,1.067,428,2.914,429,1.067,430,1.205,431,1.132,432,1.205,433,1.205,434,1.205,435,2.27,436,1.899,437,2.27,438,2.019,439,2.133,440,1.859,441,1.747,442,2.552,443,2.552,444,2.398,445,1.636,446,0.734,447,1.205,448,1.067,449,1.205,450,0.698,451,1.132,452,0.857,453,1.205,454,1.205,455,1.205,456,1.205,457,1.205,458,1.205,459,1.205,460,1.205,461,1.205,462,1.205,463,1.205,464,1.205,465,1.205,466,1.205,467,1.205,468,1.205,469,1.205,470,1.205,471,1.205,472,1.205,473,1.205,474,1.205,475,1.205,476,1.205,477,1.205,478,1.205,479,1.205,480,1.205,603,1.38]],["title/injectables/UrlHelperService.html",[147,2.927,553,3.223]],["body/injectables/UrlHelperService.html",[0,0.078,3,0.708,4,0.79,5,0.708,21,0.878,22,2.009,28,1.767,30,0.924,33,2.251,35,1.917,37,1.48,38,0.02,39,1.338,40,0.873,41,1.208,43,1.907,46,1.837,68,1.134,72,0.427,84,3.548,104,2.124,115,0.011,116,0.014,117,0.011,147,3.798,148,2.479,169,3.017,216,1.917,275,4.182,296,3.798,341,2.656,424,1.461,427,2.503,531,3.597,553,4.182,608,3.597,609,6.097,610,4.195,611,5.476,612,5.476,613,5.476,614,4.195,615,5.476,616,4.195,617,5.476,618,4.195,619,4.195,620,5.476,621,5.476,622,4.195,623,4.195,624,4.195,625,5.476,626,4.195,627,4.195,628,4.195,629,4.195,630,4.195]],["title/interfaces/UserInfo.html",[73,1.327,448,1.929]],["body/interfaces/UserInfo.html",[0,0.095,3,0.765,4,0.462,5,0.414,9,0.9,10,1.577,11,0.9,12,0.812,15,0.812,18,1.001,21,0.514,28,1.942,30,0.414,33,1.768,38,0.02,40,0.391,44,0.9,46,1.553,51,1.119,54,1.528,62,1.443,63,0.812,64,0.855,72,0.628,73,1.718,74,1.528,75,1.059,76,1.059,77,1.059,82,1.002,83,1.501,93,1.053,115,0.006,116,0.01,117,0.006,132,0.855,133,1.596,162,0.599,163,0.812,174,1.528,180,0.57,193,1.289,194,0.949,212,0.771,216,1.71,217,1.108,219,0.733,220,0.663,222,1.448,240,1.71,306,1.58,308,0.771,335,1.19,336,1.266,340,1.121,341,1.19,342,1.266,343,1.266,344,1.121,345,1.266,347,0.812,348,2.461,349,1.426,350,2.072,351,1.266,352,1.002,353,1.266,354,1.121,355,1.266,357,1.19,358,0.663,359,2.191,360,1.815,361,1.121,362,1.19,363,1.19,364,1.121,365,1.266,366,0.962,367,2.341,368,1.19,369,1.266,370,1.266,373,1.615,374,1.266,375,0.855,376,1.19,377,1.266,378,2.341,379,1.528,381,1.121,382,1.815,384,1.266,385,1.059,386,1.266,387,1.121,388,1.19,389,1.059,390,1.266,391,1.266,393,1.059,394,1.266,395,2.65,396,3.265,397,1.121,398,0.855,399,1.266,400,1.931,401,1.121,402,0.9,403,1.002,404,1.121,405,1.121,406,1.19,407,1.121,408,1.266,409,2.82,410,1.266,411,1.266,412,1.266,413,1.266,414,1.266,415,1.059,416,1.266,417,0.812,418,1.002,419,1.002,420,1.002,421,1.266,422,1.19,423,1.266,424,0.855,425,1.266,426,1.266,427,1.121,428,2.971,429,1.121,430,1.266,431,1.19,432,1.266,433,1.266,434,1.266,435,2.341,436,1.958,437,2.341,438,2.072,439,2.2,440,1.266,441,1.19,442,1.266,443,1.266,444,1.19,445,0.812,446,1.177,447,1.931,448,1.71,449,2.619,450,0.733,451,1.19,452,0.9,453,1.266,454,1.266,455,1.266,456,1.266,457,1.266,458,1.266,459,1.266,460,1.266,461,1.266,462,1.266,463,1.266,464,1.266,465,1.266,466,1.266,467,1.266,468,1.266,469,1.266,470,1.266,471,1.266,472,1.266,473,1.266,474,1.266,475,1.266,476,1.266,477,1.266,478,1.266,479,1.266,480,1.266,603,1.45,631,2.453,632,2.453]],["title/classes/ValidationHandler.html",[0,0.079,12,1.396]],["body/classes/ValidationHandler.html",[0,0.081,1,1.911,2,0.852,3,0.506,4,0.564,5,0.506,6,3.018,7,3.542,8,1.547,9,1.1,10,1.677,11,1.1,12,1.853,13,2.079,14,2.106,15,1.437,16,3.256,17,1.651,18,0.958,19,2.079,20,1.911,21,0.628,22,1.594,23,3.012,25,2.079,26,3.256,27,1.911,28,1.593,29,3.57,30,0.733,32,2.079,33,1.779,34,3.012,35,1.37,36,0.992,37,1.174,38,0.02,39,1.248,40,0.692,41,0.958,42,1.911,43,1.513,44,2.403,45,2.079,46,1.592,48,2.079,49,3.542,50,2.079,51,1.912,52,2.079,53,2.079,54,1.224,55,1.771,56,2.079,57,4.101,59,3.952,60,3.79,61,3.256,62,1.452,63,1.69,65,2.769,67,2.814,68,0.81,69,2.079,70,2.079,71,2.289,72,0.52,73,1.606,74,1.224,75,1.294,76,1.294,77,1.294,78,1.771,79,2.079,80,3.317,81,3.317,82,1.774,83,1.437,84,3.199,85,3.012,86,3.012,87,2.289,88,2.289,89,2.289,90,2.289,91,2.289,92,2.289,93,0.696,94,2.289,95,2.289,96,2.289,97,1.771,98,4.277,99,2.289,100,4.277,101,2.289,102,2.289,103,2.289,104,1.513,105,3.901,106,2.289,107,2.289,108,2.289,109,2.079,110,1.16,111,2.289,112,1.911,113,2.289,114,2.289,115,0.008,116,0.011,117,0.008,633,2.998,634,2.998]],["title/interfaces/ValidationParams.html",[57,2.494,73,1.327]],["body/interfaces/ValidationParams.html",[0,0.083,1,1.965,3,0.52,4,0.581,5,0.52,6,1.822,7,2.138,8,1.591,10,1.576,11,1.131,12,1.717,13,2.138,14,2.15,15,1.467,16,1.965,17,1.698,18,0.978,19,2.138,20,1.965,21,0.646,23,3.074,25,2.138,26,1.965,27,1.965,28,1.753,29,3.617,32,2.138,33,1.808,34,3.074,35,1.409,36,1.02,38,0.02,39,0.753,40,0.998,42,1.965,44,2.297,45,2.138,46,1.939,48,2.138,49,3.599,50,2.138,51,1.797,52,2.138,53,2.138,54,1.259,55,1.822,56,2.138,57,3.81,59,3.617,60,3.617,61,2.826,62,1.26,63,1.467,65,1.965,67,2.442,68,0.833,69,2.138,70,2.138,71,2.354,72,0.528,73,1.394,74,2.317,75,2.449,76,2.449,77,2.449,78,3.353,79,3.935,80,2.354,81,2.354,82,1.259,83,1.02,84,2.287,85,2.138,86,3.074,87,2.354,88,2.354,89,2.354,90,2.354,91,2.354,92,2.354,93,0.716,94,2.354,95,2.354,96,2.354,97,1.822,98,4.333,99,2.354,100,4.333,101,2.354,102,2.354,103,2.354,104,1.544,105,3.963,106,2.354,107,2.354,108,2.354,109,2.138,110,1.193,111,2.354,112,1.965,113,2.354,114,2.354,115,0.008,116,0.012,117,0.008,222,1.715,371,2.826,603,1.822]],["title/classes/WebHttpUrlEncodingCodec.html",[0,0.079,635,3.619]],["body/classes/WebHttpUrlEncodingCodec.html",[0,0.077,2,1.176,3,0.698,4,0.779,5,0.698,9,1.519,14,2.632,21,0.867,22,1.992,28,1.929,30,1.085,37,1.738,38,0.02,39,1.571,40,1.025,41,1.418,43,2.239,68,1.119,72,0.421,104,2.239,115,0.011,116,0.014,117,0.011,151,2.135,290,4.654,347,1.796,349,1.707,635,4.654,636,4.139,637,4.654,638,4.654,639,5.428,640,5.428,641,6.057,642,5.428,643,5.428,644,5.428,645,5.428,646,5.428,647,4.139,648,5.428,649,4.139,650,5.428,651,5.428,652,4.139,653,5.428,654,4.139,655,4.139,656,4.139,657,4.139,658,4.139]],["title/changelog.html",[659,2.165,660,2.335,661,3.664]],["body/changelog.html",[12,1.333,15,1.333,18,0.889,22,1.479,36,2.19,38,0.014,51,1.205,62,1.145,67,2.22,93,0.936,97,3.151,110,2.461,112,2.569,115,0.01,116,0.014,117,0.01,132,1.404,133,1.267,146,2.381,180,1.238,193,1.516,194,1.559,211,1.954,212,1.267,217,0.984,218,2.794,219,1.205,220,1.089,226,2.302,306,2.216,326,3.077,349,1.677,352,2.178,358,1.442,366,1.536,379,2.178,403,1.645,404,1.842,419,1.645,420,1.645,438,1.645,446,1.677,450,1.205,484,3.077,515,2.381,528,3.077,546,2.752,662,5.333,663,4.03,664,5.126,665,3.151,666,3.455,667,4.03,668,3.532,669,3.077,670,2.22,671,2.381,672,2.794,673,3.077,674,4.03,675,3.455,676,4.03,677,4.03,678,3.077,679,2.794,680,3.151,681,3.698,682,3.455,683,3.455,684,4.03,685,3.455,686,3.455,687,2.794,688,3.455,689,3.455,690,1.739,691,1.842,692,4.03,693,3.455,694,3.4,695,4.03,696,3.455,697,4.03,698,2.794,699,3.759,700,1.954,701,1.739,702,3.455,703,3.455,704,2.569,705,3.455,706,2.794,707,2.381,708,3.077,709,3.455,710,4.03,711,4.03,712,4.03,713,3.077,714,1.954,715,3.455,716,3.077,717,3.077,718,4.072,719,4.03,720,4.03,721,4.03,722,5.333,723,4.03,724,3.077,725,3.455,726,3.455,727,3.455,728,4.03,729,3.455]],["title/dependencies.html",[730,3.664,731,3.82]],["body/dependencies.html",[38,0.02,70,3.425,115,0.013,116,0.016,117,0.013,148,2.918,153,4.212,265,3.772,550,4.236,637,4.236,731,3.772,732,4.94,733,7.394,734,4.94,735,4.94,736,4.94,737,6.074,738,4.638,739,4.94,740,4.94,741,4.94,742,4.94,743,4.94,744,4.236,745,4.94,746,3.425,747,4.94,748,4.94,749,6.074,750,4.94,751,4.94,752,4.94,753,4.94,754,4.94,755,4.94,756,4.94,757,4.94]],["title/miscellaneous/functions.html",[758,2.165,759,4.29]],["body/miscellaneous/functions.html",[21,1.112,28,1.365,37,1.715,38,0.018,39,1.55,41,1.4,43,1.85,69,4.401,115,0.014,116,0.016,117,0.014,559,5.82,560,5.82,758,3.138,759,4.554,760,6.346,761,6.346,762,6.788,763,6.346,764,5.311,765,5.311,766,6.346,767,5.311,768,5.311]],["title/index.html",[21,0.767,659,2.165,660,2.335]],["body/index.html",[0,0.072,4,0.356,5,0.319,17,1.041,18,1.064,30,0.319,36,1.009,38,0.019,39,0.745,46,0.537,51,0.565,67,1.041,68,1.576,72,0.448,83,1.009,84,1.978,93,0.439,97,1.117,104,1.062,110,1.483,112,1.944,115,0.005,116,0.008,117,0.005,124,1.621,133,1.706,148,1.802,151,0.975,161,2.115,162,1.326,165,1.205,169,1.041,172,1.311,180,0.708,186,1.944,193,1.25,209,1.802,212,0.959,215,2.115,217,0.462,219,0.565,220,0.511,226,0.816,242,1.311,297,2.443,308,0.959,319,1.621,323,1.041,347,1.009,349,0.959,350,0.772,358,1.618,361,0.864,366,1.603,371,1.205,375,1.335,381,0.864,385,1.316,393,0.816,397,2.01,398,0.658,403,1.565,417,1.009,418,0.772,424,0.658,429,1.752,436,1.316,438,1.245,439,1.479,445,1.009,446,1.706,448,0.864,450,1.146,452,0.694,484,2.329,519,1.574,537,1.205,546,0.975,548,2.329,552,2.329,562,1.444,563,1.311,572,1.311,575,1.311,579,1.444,581,2.115,582,1.311,638,1.621,664,2.615,665,1.802,666,2.615,668,3.206,669,1.444,670,2.112,671,1.117,672,1.311,673,1.444,678,3.358,679,2.658,680,1.117,686,1.621,690,2.584,691,1.394,694,2.804,698,3.346,699,1.117,700,2.133,701,2.437,702,1.621,706,1.311,707,1.117,708,1.444,713,1.444,714,0.917,716,1.444,724,1.444,726,3.287,727,1.621,738,1.444,746,1.311,769,3.037,770,3.05,771,1.891,772,1.891,773,1.891,774,2.072,775,1.891,776,1.891,777,1.891,778,1.621,779,1.891,780,1.621,781,3.833,782,1.891,783,1.891,784,3.05,785,3.05,786,2.8,787,1.891,788,1.891,789,3.05,790,1.891,791,3.05,792,1.891,793,1.891,794,2.804,795,1.891,796,2.115,797,1.891,798,1.891,799,3.833,800,1.891,801,1.891,802,1.621,803,3.05,804,1.891,805,1.891,806,1.891,807,1.891,808,1.891,809,1.891,810,3.05,811,1.891,812,3.05,813,1.311,814,1.891,815,3.05,816,1.891,817,1.891,818,1.891,819,2.615,820,1.891,821,1.891,822,1.891,823,1.891,824,3.833,825,1.891,826,1.891,827,3.05,828,1.891,829,1.891,830,1.621,831,1.891,832,1.621,833,1.444,834,1.891,835,1.891,836,1.891,837,1.891,838,1.891,839,1.891,840,1.891,841,1.891,842,4.398,843,1.891,844,1.891,845,1.621,846,1.891,847,1.891,848,1.891,849,1.978,850,1.891,851,3.833,852,1.891,853,1.891,854,1.891,855,3.05,856,1.621,857,2.927,858,1.891,859,1.444,860,1.311,861,1.891,862,3.05,863,1.621,864,1.802,865,1.621,866,1.621,867,1.891,868,1.891,869,1.621,870,1.311,871,1.891,872,1.891,873,2.927,874,1.621,875,1.891,876,1.891,877,3.05,878,1.891,879,2.489,880,2.423,881,2.615,882,1.891,883,3.833,884,3.833,885,1.891,886,1.891,887,1.891,888,1.444,889,1.891,890,1.891,891,3.287,892,2.329,893,2.443,894,2.615,895,1.621,896,1.621,897,2.115,898,1.205,899,1.621,900,1.444,901,1.621,902,1.891,903,0.985,904,2.615,905,1.621,906,1.891,907,1.891,908,1.752,909,1.891,910,1.621,911,2.804,912,1.041,913,1.205,914,1.041,915,1.205,916,1.041,917,1.041,918,1.041,919,1.205,920,1.041,921,1.041,922,1.205,923,1.311,924,1.311,925,1.205,926,1.205,927,0.975,928,1.041,929,2.927,930,1.891,931,3.05,932,1.891,933,1.891,934,3.05,935,1.891,936,2.115,937,1.891,938,1.891,939,1.444,940,2.615,941,3.287,942,1.891,943,1.444,944,1.621,945,1.891,946,1.891,947,1.891,948,1.891,949,1.621,950,1.621,951,1.621,952,1.621,953,1.891,954,3.05,955,1.891,956,1.891,957,1.891,958,1.891,959,1.311,960,1.891,961,1.891,962,1.891,963,2.329,964,1.311,965,1.444,966,1.444,967,1.444,968,1.621,969,1.621,970,1.891,971,2.615,972,1.621,973,1.621,974,1.621,975,1.891,976,2.329,977,1.444,978,1.944,979,1.621,980,1.891,981,1.621,982,1.621,983,1.891,984,1.444,985,1.205,986,1.891,987,1.891,988,1.891,989,1.311,990,1.891,991,3.833,992,1.891,993,1.621,994,1.891,995,1.444,996,1.891,997,1.444,998,1.891,999,1.891,1000,1.891]],["title/license.html",[659,2.165,660,2.335,1001,3.664]],["body/license.html",[18,1.28,38,0.015,115,0.012,116,0.015,117,0.012,152,3.939,218,3.186,376,2.228,680,2.714,698,3.186,704,2.928,713,3.508,833,3.508,849,2.37,1002,6.364,1003,4.594,1004,4.594,1005,4.594,1006,4.594,1007,5.805,1008,4.594,1009,4.594,1010,4.594,1011,4.594,1012,4.594,1013,5.805,1014,7.303,1015,4.594,1016,4.594,1017,4.594,1018,4.057,1019,4.594,1020,5.805,1021,3.939,1022,4.594,1023,4.594,1024,4.594,1025,4.594,1026,4.594,1027,4.594,1028,4.594,1029,5.805,1030,4.594,1031,4.594,1032,4.594,1033,4.594,1034,4.594,1035,2.714,1036,5.805,1037,5.805,1038,4.594,1039,4.594,1040,4.594,1041,4.594,1042,4.594,1043,4.594,1044,4.594,1045,4.594,1046,4.594,1047,4.594,1048,4.594,1049,3.939,1050,4.594,1051,4.594,1052,4.594,1053,4.594,1054,4.594,1055,4.594,1056,4.594,1057,4.594,1058,3.939,1059,4.594,1060,4.594,1061,4.594,1062,4.594,1063,4.594]],["title/modules.html",[538,4.198]],["body/modules.html",[38,0.017,115,0.015,116,0.017,117,0.015,537,3.73,538,4.468,989,4.058,1064,5.852,1065,5.852]],["title/overview.html",[1066,4.714]],["body/overview.html",[2,1.588,38,0.017,97,3.3,115,0.014,116,0.017,117,0.014,296,3.873,536,4.992,563,3.873,564,4.789,565,3.56,603,3.3,608,4.789,680,3.3,731,4.265,746,3.873,778,4.789,1066,4.789,1067,5.585,1068,6.538,1069,5.585,1070,5.585]],["title/miscellaneous/typealiases.html",[758,2.165,1071,5.003]],["body/miscellaneous/typealiases.html",[21,1.069,38,0.02,40,0.814,115,0.013,116,0.016,117,0.013,198,2.812,493,3.254,496,3.95,499,3.016,500,3.254,501,3.254,502,3.016,503,3.254,504,3.254,505,3.016,506,3.254,507,3.254,508,3.254,509,3.254,510,3.254,511,3.254,512,3.016,513,3.016,514,3.254,515,3.016,516,3.254,517,3.016,518,3.016,519,2.634,758,3.016,1072,5.104,1073,5.104]],["title/miscellaneous/variables.html",[758,2.165,1074,4.29]],["body/miscellaneous/variables.html",[21,1.152,35,2.962,38,0.018,40,0.877,110,2.128,115,0.014,116,0.017,117,0.014,127,4.717,128,5.557,170,5.557,171,4.717,226,2.797,240,2.514,758,3.25,1074,4.717,1075,6.481,1076,5.502,1077,5.502,1078,5.502,1079,5.502]],["title/additional-documentation/getting-started.html",[337,0.92,659,1.912,660,2.063,903,0.832]],["body/additional-documentation/getting-started.html",[38,0.017,115,0.015,116,0.017,117,0.015,298,3.183,659,3.94,660,4.251,1035,3.414,1080,4.412,1081,5.778,1082,4.007]],["title/additional-documentation/preserving-state-(like-the-requested-url).html",[180,0.609,337,0.746,359,1.133,903,0.675,1083,2.251,1084,1.673]],["body/additional-documentation/preserving-state-(like-the-requested-url).html",[3,0.928,38,0.019,41,1.213,115,0.014,116,0.017,117,0.014,180,1.505,344,2.514,354,2.514,359,2.973,388,2.668,690,2.374,944,4.717,966,4.201,1083,4.717,1084,4.131,1085,5.502,1086,5.502,1087,3.815,1088,5.502,1089,5.502]],["title/additional-documentation/code-flow-+-pcke.html",[38,0.007,337,0.746,701,1.133,796,1.82,903,0.675,1090,2.625]],["body/additional-documentation/code-flow-+-pcke.html",[15,1.277,17,2.127,30,0.651,36,1.277,38,0.019,68,1.043,72,0.393,93,1.203,110,1.493,115,0.01,116,0.013,117,0.01,162,1.429,165,2.461,169,2.127,180,1.203,193,1.473,209,2.281,212,1.214,217,1.266,220,1.043,247,3.594,308,1.63,358,1.043,361,2.369,362,1.872,364,2.369,366,1.332,375,2.038,417,1.277,445,1.936,446,1.214,450,1.154,452,1.416,668,2.281,670,2.855,673,2.948,679,2.677,690,1.666,691,1.764,699,2.281,700,1.872,701,2.899,714,1.872,718,2.948,769,1.764,774,1.902,786,1.992,796,4.837,849,1.992,856,4.444,864,2.281,866,3.31,879,3.019,908,1.764,911,3.304,914,2.127,915,2.461,916,2.127,917,2.127,918,2.127,919,3.304,920,2.127,921,2.855,922,2.461,925,2.461,926,2.461,927,1.992,939,2.948,940,3.31,943,2.948,979,3.31,1082,2.677,1091,3.86,1092,3.31,1093,3.86,1094,3.86,1095,3.86,1096,2.677,1097,5.183,1098,3.86,1099,3.86,1100,2.677,1101,3.86,1102,3.86,1103,4.444,1104,3.31,1105,2.948,1106,3.86,1107,3.86,1108,3.86,1109,2.677,1110,3.86,1111,3.31,1112,3.86,1113,3.86,1114,3.958,1115,3.86,1116,3.86,1117,3.86,1118,3.86,1119,3.86,1120,3.86,1121,3.86,1122,3.86,1123,3.86,1124,3.86,1125,3.86,1126,3.86,1127,3.31,1128,3.86]],["title/additional-documentation/refreshing-a-token.html",[193,0.92,337,0.92,860,2.244,903,0.832]],["body/additional-documentation/refreshing-a-token.html",[3,0.463,5,0.819,15,1.605,17,2.242,18,1.07,30,0.463,35,1.86,36,2.057,38,0.018,46,0.78,62,0.78,68,0.741,72,0.279,83,1.776,110,1.574,115,0.007,116,0.011,117,0.007,133,1.526,142,2.094,157,2.352,159,2.352,162,1.185,163,1.346,169,1.511,180,1.127,193,1.855,212,1.526,217,1.311,220,0.741,226,1.756,242,3.365,244,2.352,275,2.094,296,1.902,298,2.957,306,1.87,307,2.094,308,1.28,352,2.539,358,0.741,366,1.046,375,1.69,398,0.955,402,1.006,403,1.12,417,0.907,444,1.33,445,1.605,446,1.688,450,0.82,452,1.006,546,1.415,580,1.748,659,1.62,665,1.62,668,1.62,670,1.511,671,1.62,672,1.902,687,1.902,690,1.184,691,1.253,693,2.352,699,3.923,700,3.015,701,2.943,704,3.093,706,2.822,707,2.867,708,3.107,709,2.352,714,1.33,716,3.705,769,1.86,786,2.1,796,3.976,845,3.49,849,2.503,859,2.094,860,4.165,863,2.352,870,1.902,879,2.77,880,1.511,888,3.107,896,2.352,897,3.365,898,1.748,904,3.49,908,1.253,910,2.352,911,3.093,912,1.511,913,1.748,914,2.673,915,1.748,916,2.673,917,1.511,918,1.511,919,1.748,920,1.511,921,2.242,922,1.748,923,1.902,924,1.902,925,1.748,926,1.748,927,1.415,928,1.511,943,2.094,963,2.094,964,1.902,968,2.352,969,3.49,977,2.094,993,2.352,995,2.094,997,2.094,1018,1.748,1021,2.352,1080,2.094,1096,1.902,1100,1.902,1104,2.352,1105,2.094,1114,2.094,1129,2.743,1130,2.743,1131,3.49,1132,1.62,1133,2.743,1134,4.07,1135,2.743,1136,2.352,1137,2.352,1138,4.07,1139,2.743,1140,2.743,1141,2.352,1142,4.07,1143,2.352,1144,2.743,1145,2.743,1146,2.743,1147,1.748,1148,2.743,1149,2.743,1150,2.743,1151,2.743,1152,2.743,1153,4.07,1154,4.852,1155,1.902,1156,2.743,1157,2.743,1158,2.743,1159,2.743,1160,2.743,1161,3.49,1162,3.49,1163,2.743,1164,2.743,1165,2.352,1166,2.743,1167,2.743,1168,2.352,1169,3.107,1170,2.743,1171,2.743,1172,2.743,1173,2.352,1174,2.743,1175,2.743,1176,2.743,1177,2.352,1178,2.743,1179,2.743,1180,2.094,1181,4.07,1182,2.743,1183,2.743,1184,2.743,1185,2.743,1186,2.743,1187,2.743,1188,2.352,1189,2.743,1190,2.743,1191,2.743,1192,2.743,1193,2.743,1194,2.743,1195,2.743,1196,4.07,1197,2.743,1198,2.743,1199,4.07,1200,4.07,1201,2.743,1202,2.743,1203,2.743,1204,2.743,1205,2.743,1206,2.743,1207,2.743,1208,2.743]],["title/additional-documentation/working-with-httpinterceptors.html",[337,0.92,903,0.832,1209,3.237,1210,3.237]],["body/additional-documentation/working-with-httpinterceptors.html",[0,0.101,10,0.815,14,2.273,18,1.034,28,0.857,38,0.019,41,1.034,55,2.769,62,0.948,63,1.551,68,1.783,72,0.477,84,1.721,93,1.088,104,2.298,115,0.009,116,0.012,117,0.009,125,2.313,126,4.647,130,1.721,132,1.888,133,1.474,134,2.86,135,3.66,136,2.86,137,2.769,139,2.86,140,2.86,141,4.019,142,2.546,143,4.019,145,2.86,146,3.202,147,3.25,148,1.97,149,2.86,150,4.647,151,1.721,161,3.758,162,1.324,163,2.049,164,2.988,165,2.126,166,2.546,168,3.25,172,4.077,173,2.86,174,1.362,177,2.86,178,2.86,179,2.86,180,0.774,181,2.86,182,2.86,183,5.041,184,2.86,185,2.86,186,3.748,187,2.86,190,2.86,193,1.54,205,2.86,206,4.019,208,2.86,217,1.145,226,2.023,293,3.25,323,1.837,347,1.551,358,0.901,364,1.524,366,0.857,398,1.162,402,1.224,404,1.524,405,1.524,555,2.126,572,2.313,575,3.25,581,3.25,582,2.313,586,2.546,587,3.579,682,2.86,769,1.524,774,1.224,832,2.86,833,2.546,849,1.721,892,2.546,898,2.126,899,4.019,964,2.313,971,4.019,972,2.86,973,2.86,974,2.86,1105,2.546,1109,2.313,1132,1.97,1143,2.86,1168,2.86,1211,3.335,1212,2.86,1213,3.335,1214,3.335,1215,2.86,1216,2.86,1217,3.335,1218,3.335,1219,3.335,1220,3.335,1221,3.335,1222,3.335,1223,3.335,1224,3.335,1225,2.546,1226,3.335,1227,3.335,1228,3.335,1229,3.335,1230,3.335,1231,3.335,1232,3.335,1233,3.335,1234,2.86,1235,3.335,1236,3.335,1237,3.335,1238,2.546,1239,3.335,1240,3.335,1241,3.335,1242,3.335,1243,3.335,1244,3.335,1245,3.335,1246,3.335]],["title/additional-documentation/callback-after-login.html",[337,0.92,690,1.397,903,0.832,1247,2.775]],["body/additional-documentation/callback-after-login.html",[38,0.019,51,1.891,62,1.501,63,1.747,115,0.014,116,0.016,117,0.014,323,2.909,344,2.89,373,2.279,382,2.56,387,2.89,403,2.156,690,2.73,813,3.661,959,3.661,1049,4.528,1084,3.366,1087,3.661,1173,4.528,1247,5.423,1248,5.28,1249,5.28,1250,5.28,1251,5.28,1252,5.28,1253,5.28]],["title/additional-documentation/custom-query-parameters.html",[37,0.783,337,0.824,347,0.959,903,0.745,1254,2.486]],["body/additional-documentation/custom-query-parameters.html",[33,1.939,37,1.505,38,0.019,115,0.014,116,0.017,117,0.014,217,1.36,306,1.939,347,2.159,700,2.7,701,2.403,1254,4.775,1255,5.568,1256,4.775,1257,5.568,1258,5.568,1259,5.568,1260,5.568,1261,5.568,1262,5.568,1263,5.568]],["title/additional-documentation/events.html",[337,1.041,379,1.496,903,0.942]],["body/additional-documentation/events.html",[5,0.687,18,0.899,28,1.047,36,1.348,38,0.019,62,1.158,68,1.101,78,2.407,83,1.348,115,0.011,116,0.014,117,0.011,146,2.407,163,1.348,168,3.725,193,1.158,198,2.245,268,3.494,297,3.425,323,2.245,338,3.494,340,1.862,352,2.194,358,1.452,359,2.319,360,1.976,366,1.047,368,2.605,379,2.785,381,3.035,389,1.759,401,1.862,450,1.218,492,3.174,499,2.407,502,2.407,505,2.407,512,2.407,513,2.407,517,2.407,528,3.111,665,3.174,668,2.407,675,3.494,681,2.825,689,3.494,694,2.597,699,3.551,700,1.976,701,1.759,704,2.597,707,2.407,769,1.862,774,1.971,864,2.407,951,3.494,967,3.111,985,3.425,989,2.825,1084,3.425,1141,4.607,1169,3.111,1212,3.494,1264,4.074,1265,4.074,1266,4.074,1267,4.074,1268,4.074,1269,3.494,1270,4.074,1271,4.074,1272,4.074,1273,4.074,1274,3.494,1275,4.074,1276,4.074,1277,4.074,1278,4.074,1279,4.074,1280,4.074,1281,5.372,1282,6.955,1283,5.372,1284,4.074,1285,4.074,1286,3.494,1287,4.074,1288,3.494,1289,3.494,1290,4.074,1291,4.074,1292,4.074,1293,5.372,1294,5.372,1295,4.074,1296,4.074,1297,4.074,1298,3.111,1299,4.074,1300,3.494,1301,4.074,1302,4.074]],["title/additional-documentation/routing-with-the-hashstrategy.html",[337,0.92,903,0.832,978,2.063,984,2.471]],["body/additional-documentation/routing-with-the-hashstrategy.html",[13,3.371,18,1.072,19,4.17,33,1.693,36,1.99,38,0.018,62,1.382,72,0.495,83,1.608,93,1.129,115,0.013,116,0.016,117,0.013,194,1.881,226,2.098,323,2.678,340,2.222,348,2.357,357,2.357,363,2.357,486,3.712,536,3.712,774,1.784,802,5.599,897,3.371,900,3.712,914,3.313,929,3.712,952,4.168,963,3.712,978,3.834,981,4.168,984,4.592,1096,3.371,1109,3.371,1155,3.371,1161,5.157,1180,3.712,1188,4.168,1225,3.712,1303,4.861,1304,4.861,1305,6.823,1306,6.53,1307,4.861,1308,4.861,1309,4.861,1310,4.861,1311,4.861,1312,4.861,1313,4.861,1314,4.861,1315,3.712,1316,4.861,1317,4.861,1318,4.861]],["title/additional-documentation/adapt-id_token-validation.html",[51,0.867,211,1.406,337,0.824,903,0.745,1319,2.486]],["body/additional-documentation/adapt-id_token-validation.html",[11,1.738,12,2.135,30,0.799,38,0.019,51,1.769,59,3.019,60,3.019,61,3.019,62,1.682,67,3.26,68,1.28,73,1.489,78,2.798,82,1.934,84,2.444,110,1.832,115,0.012,116,0.015,117,0.012,209,3.813,211,2.869,212,1.861,213,4.061,219,1.416,220,1.28,306,2.061,358,1.28,366,1.217,393,2.044,401,2.164,402,1.738,405,2.704,406,2.869,417,1.567,418,1.934,422,2.297,481,3.284,565,3.019,567,4.061,687,3.284,694,3.019,769,2.164,774,1.738,900,3.616,908,2.164,939,3.616,977,3.616,1238,3.616,1319,4.061,1320,4.736,1321,4.736,1322,4.736,1323,4.736,1324,4.061,1325,4.736,1326,4.736,1327,4.061,1328,4.061,1329,4.736,1330,4.061,1331,4.736]],["title/additional-documentation/session-checks.html",[337,0.92,681,2.244,903,0.832,1298,2.471]],["body/additional-documentation/session-checks.html",[30,0.726,38,0.019,68,1.163,72,0.438,83,1.424,93,0.999,115,0.011,116,0.014,117,0.011,169,2.371,197,3.69,217,1.051,247,2.984,298,2.371,306,1.499,347,1.424,349,1.353,352,1.757,358,1.163,366,1.106,379,1.757,393,1.857,438,1.757,445,1.424,446,1.353,450,1.664,452,1.579,518,3.289,519,2.22,668,2.543,669,3.286,680,2.543,681,4.801,683,3.69,685,3.69,687,2.984,688,3.69,691,2.544,704,3.549,706,2.984,714,2.087,725,3.69,769,1.967,774,2.043,780,3.69,786,3.184,864,3.289,870,2.984,879,2.22,880,2.371,888,3.286,905,3.69,911,3.934,912,2.371,913,2.743,915,2.743,916,3.067,917,2.371,919,2.743,927,2.22,928,2.371,929,3.286,966,3.286,1058,3.69,1092,3.69,1147,2.743,1162,3.69,1180,3.286,1234,3.69,1288,3.69,1298,4.713,1328,3.69,1332,4.303,1333,4.303,1334,4.303,1335,5.568,1336,4.303,1337,4.303,1338,4.303,1339,4.303,1340,3.286,1341,4.303,1342,5.568,1343,4.303,1344,5.568,1345,4.303,1346,4.303,1347,4.303,1348,4.303]],["title/additional-documentation/server-side-rendering.html",[162,0.708,337,0.824,418,1.184,903,0.745,1349,2.486]],["body/additional-documentation/server-side-rendering.html",[38,0.016,115,0.014,116,0.017,117,0.014,162,1.681,293,3.804,349,1.725,418,2.81,705,4.703,774,2.013,794,3.496,898,3.496,1132,3.241,1349,5.9,1350,5.485,1351,5.485,1352,5.485,1353,5.485,1354,5.485,1355,5.485,1356,5.485,1357,5.485,1358,5.485,1359,5.485]],["title/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[219,0.611,220,0.553,337,0.581,700,0.992,701,0.883,774,0.75,903,0.526,908,0.934,1018,1.303]],["body/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[0,0.076,11,1.498,15,1.351,18,1.187,38,0.019,40,0.651,72,0.416,110,1.58,115,0.011,116,0.014,117,0.011,133,1.692,162,1.314,180,1.485,215,2.832,217,1.314,219,1.608,220,1.454,222,1.58,297,2.603,298,2.25,308,1.892,350,1.667,375,2.096,389,1.762,398,1.422,415,1.762,417,1.351,419,1.667,420,1.667,436,1.762,445,1.351,446,1.892,450,1.221,519,2.107,546,2.776,580,2.603,670,2.964,671,2.413,678,3.118,679,2.832,680,2.413,690,2.597,691,1.866,700,1.98,701,1.762,714,1.98,717,3.118,774,1.498,786,2.776,794,2.603,849,2.107,869,3.501,873,3.118,879,3.105,880,2.25,893,2.603,903,1.049,908,2.459,912,2.964,914,2.25,916,2.25,917,2.25,918,2.25,920,2.25,921,2.25,927,2.107,928,2.25,931,2.832,936,2.832,959,2.832,965,3.118,976,3.118,985,2.603,1018,2.603,1035,2.413,1082,2.832,1087,2.832,1132,2.413,1147,2.603,1155,2.832,1315,3.118,1340,3.118,1360,3.501,1361,4.084,1362,4.084,1363,3.501,1364,3.118,1365,3.118,1366,3.501,1367,3.501,1368,4.084,1369,4.084,1370,4.084,1371,3.501,1372,3.501,1373,3.501,1374,3.501,1375,4.084]],["title/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[36,0.677,211,0.992,219,0.611,220,0.553,308,0.643,337,0.581,691,0.934,903,0.526,1376,2.045]],["body/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[18,0.891,30,0.901,38,0.019,64,1.407,68,1.092,72,0.411,93,0.938,115,0.01,116,0.014,117,0.01,162,0.987,169,2.225,180,1.538,194,2.066,211,2.902,212,1.27,217,1.462,218,2.801,219,2.034,220,1.839,226,1.743,308,2.082,354,1.846,358,1.092,366,1.373,375,1.407,402,1.482,417,1.336,438,1.649,445,1.767,446,1.27,450,1.789,452,2.196,565,3.405,672,2.801,690,1.743,691,2.91,694,2.574,714,1.958,715,3.463,729,5.131,769,1.846,774,1.482,786,2.756,864,3.536,879,3.088,880,2.225,911,3.815,912,2.225,913,2.574,914,2.225,915,2.574,916,2.225,917,2.225,918,2.225,919,2.574,920,2.225,921,2.225,922,2.574,923,2.801,924,2.801,925,2.574,926,2.574,927,2.084,928,2.225,982,3.463,1035,2.386,1100,2.801,1165,3.463,1256,5.131,1274,3.463,1377,4.039,1378,5.46,1379,4.039,1380,4.58,1381,4.039,1382,4.039,1383,4.039,1384,4.039,1385,4.039,1386,4.039,1387,4.039,1388,4.039,1389,4.039,1390,4.039,1391,4.039,1392,3.463,1393,3.463,1394,4.039]],["title/additional-documentation/using-systemjs.html",[36,1.071,337,0.92,903,0.832,1395,2.775]],["body/additional-documentation/using-systemjs.html",[36,1.67,38,0.019,115,0.013,116,0.016,117,0.013,156,4.329,265,4.7,358,1.868,366,1.707,546,2.605,744,4.329,769,3.159,865,4.329,985,3.218,1169,3.855,1395,5.694,1396,6.155,1397,5.048,1398,5.048,1399,5.048,1400,5.048,1401,6.155,1402,6.155,1403,5.048,1404,5.048,1405,5.048,1406,5.048,1407,5.048,1408,5.048,1409,5.048,1410,5.048]],["title/additional-documentation/original-config-api.html",[337,0.824,546,1.496,670,1.597,671,1.713,903,0.745]],["body/additional-documentation/original-config-api.html",[0,0.073,15,1.285,18,0.857,30,0.655,35,1.775,38,0.019,39,0.949,72,0.395,110,1.503,115,0.01,116,0.014,117,0.01,130,2.004,133,1.637,162,1.434,180,1.363,193,1.104,211,2.846,212,1.222,215,2.694,217,1.272,219,1.874,220,1.695,222,1.503,298,2.14,308,1.846,358,1.05,366,0.998,373,1.677,375,2.044,389,1.677,398,1.813,417,1.285,445,1.285,446,1.972,450,1.161,452,1.425,546,3.029,580,2.476,665,2.295,670,3.234,671,3.075,690,2.533,691,1.775,707,2.295,714,1.884,774,1.425,786,2.004,794,3.318,813,2.694,849,2.686,870,2.694,873,2.966,879,3.029,880,2.14,893,3.318,903,0.998,908,1.775,912,2.14,913,2.476,914,2.14,916,2.14,917,2.14,918,2.14,920,2.14,921,2.14,922,2.476,923,2.694,924,2.694,925,2.476,926,2.476,927,2.004,928,2.14,931,2.694,936,2.694,965,2.966,976,2.966,978,2.476,985,2.476,1035,2.295,1080,2.966,1082,2.694,1087,2.694,1100,2.694,1147,2.476,1215,3.331,1216,3.331,1289,3.331,1360,3.331,1363,3.331,1364,2.966,1365,2.966,1371,3.331,1372,3.331,1373,4.463,1374,3.331,1378,4.463,1380,3.331,1392,3.331,1393,3.331,1411,3.331,1412,3.331,1413,3.885,1414,3.331,1415,3.885,1416,3.885,1417,3.885,1418,3.885,1419,3.885,1420,3.885]],["title/additional-documentation/using-password-flow.html",[36,0.959,337,0.824,701,1.251,857,2.213,903,0.745]],["body/additional-documentation/using-password-flow.html",[0,0.071,3,0.42,11,0.914,17,2.085,18,1.213,36,2.144,38,0.019,39,0.608,40,0.397,43,0.867,51,0.744,72,0.385,104,0.867,110,0.963,115,0.006,116,0.01,117,0.006,130,1.285,133,1.608,161,2.624,162,1.415,180,1.063,193,1.711,212,0.783,217,1.344,219,1.529,220,1.382,222,1.464,247,2.624,297,1.587,298,2.817,306,1.318,307,1.901,308,1.73,323,1.372,326,2.89,349,1.821,350,1.017,366,0.973,373,1.976,375,2.018,385,1.633,387,1.138,397,1.138,398,1.318,415,1.075,417,2.144,419,1.017,420,1.017,427,2.337,429,2.337,436,1.075,445,1.515,446,1.951,450,1.131,483,2.135,486,1.901,665,1.471,690,1.633,696,2.135,699,2.236,700,1.835,701,2.882,703,2.135,707,1.471,714,2.22,717,1.901,718,1.901,724,2.89,738,2.89,774,1.68,786,2.362,794,2.412,813,1.727,830,3.245,849,1.285,857,4.852,859,1.901,860,1.727,864,2.236,874,3.245,879,2.838,880,2.085,881,3.245,893,2.918,897,1.727,898,1.587,901,2.135,908,2.337,912,2.522,918,2.085,920,2.085,921,2.085,927,2.362,928,2.085,931,2.624,936,2.624,941,2.135,949,3.245,950,3.245,959,3.175,964,1.727,967,3.496,978,1.587,1018,2.918,1084,1.587,1103,5.556,1109,2.624,1111,3.245,1114,3.496,1127,2.135,1131,2.135,1132,3.25,1136,2.135,1137,3.245,1147,2.918,1155,1.727,1177,2.135,1238,1.901,1269,2.135,1300,2.135,1315,1.901,1324,2.135,1327,2.135,1330,3.245,1340,2.89,1364,2.89,1365,2.89,1366,2.135,1367,2.135,1411,2.135,1412,2.135,1414,2.135,1421,2.49,1422,2.49,1423,2.49,1424,3.785,1425,2.49,1426,2.49,1427,2.49,1428,2.49,1429,2.49,1430,2.49,1431,2.49,1432,2.49,1433,2.49,1434,5.114,1435,3.785,1436,3.785,1437,3.785,1438,3.785,1439,3.785,1440,3.785,1441,3.785,1442,3.785,1443,2.49,1444,2.49,1445,2.49,1446,2.49,1447,2.49,1448,2.49,1449,2.49,1450,2.49,1451,2.49,1452,3.785,1453,2.49,1454,2.49,1455,2.49,1456,2.49,1457,3.785,1458,2.49,1459,3.785,1460,2.49,1461,2.49,1462,2.49,1463,2.49,1464,2.49,1465,2.49]],["title/additional-documentation/configure-custom-oauthstorage.html",[132,1.01,337,0.824,347,0.959,903,0.745,908,1.325]],["body/additional-documentation/configure-custom-oauthstorage.html",[0,0.105,18,1.243,36,1.865,38,0.019,68,1.523,72,0.573,104,1.528,115,0.011,116,0.015,117,0.011,132,2.289,151,2.263,226,1.893,242,3.041,293,3.041,347,2.061,350,1.791,358,1.185,366,1.127,371,2.796,385,2.432,398,1.528,402,1.609,415,2.837,419,2.841,420,2.301,537,2.796,548,3.349,552,4.303,562,3.349,563,3.041,565,2.796,566,3.76,691,2.846,698,3.041,746,3.041,769,2.004,774,1.609,819,3.76,891,5.34,892,3.349,893,3.593,894,3.76,895,4.833,908,2.004,989,3.041,995,4.303,997,3.349,1035,2.591,1096,4.319,1132,2.591,1225,3.349,1286,3.76,1466,4.386,1467,4.386,1468,4.386,1469,4.386,1470,4.386,1471,5.636,1472,4.386]]],"invertedIndex":[["",{"_index":38,"title":{"additional-documentation/code-flow-+-pcke.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["0",{"_index":275,"title":{},"body":{"classes/JwksValidationHandler.html":{},"injectables/UrlHelperService.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["0.33",{"_index":1206,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["0.35.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1204,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["0.9.1",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":296,"title":{},"body":{"classes/JwksValidationHandler.html":{},"injectables/UrlHelperService.html":{},"overview.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["1.0",{"_index":1334,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["1.0.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":171,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["19",{"_index":1070,"title":{},"body":{"overview.html":{}}}],["1_0.html#tokenendpoint",{"_index":440,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1_0.html#userinfo",{"_index":447,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["2",{"_index":97,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":1095,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["2.1",{"_index":669,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["20",{"_index":993,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["20.000",{"_index":1194,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["2017",{"_index":1004,"title":{},"body":{"license.html":{}}}],["3.1",{"_index":1211,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["3.3.7",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["4.3",{"_index":818,"title":{},"body":{"index.html":{}}}],["4.x",{"_index":812,"title":{},"body":{"index.html":{}}}],["401",{"_index":1219,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["403",{"_index":1220,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["4202",{"_index":885,"title":{},"body":{"index.html":{}}}],["4202]/index.html",{"_index":886,"title":{},"body":{"index.html":{}}}],["4202]/silent",{"_index":887,"title":{},"body":{"index.html":{}}}],["4711",{"_index":1261,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["4th",{"_index":924,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["5",{"_index":778,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5.x",{"_index":815,"title":{},"body":{"index.html":{}}}],["6",{"_index":781,"title":{},"body":{"index.html":{}}}],["6.5.2",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":241,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["7",{"_index":801,"title":{},"body":{"index.html":{}}}],["75",{"_index":1197,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["8",{"_index":1091,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["8.0.12",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["8089|4200",{"_index":884,"title":{},"body":{"index.html":{}}}],["9]{3",{"_index":108,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["_throw(err",{"_index":1229,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["a021627fd9d3the",{"_index":1356,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["above",{"_index":1035,"title":{},"body":{"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["abstraction",{"_index":120,"title":{},"body":{"classes/CryptoHandler.html":{}}}],["abstractvalidationhandler",{"_index":1,"title":{"classes/AbstractValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["abstractvalidationhandler:39",{"_index":259,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["abstractvalidationhandler:44",{"_index":258,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["abstractvalidationhandler:69",{"_index":257,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["abstractvalidationhandler:86",{"_index":256,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["access",{"_index":967,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["access_token",{"_index":63,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{}}}],["accesstoken",{"_index":75,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["according",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["acr_values_supported",{"_index":464,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["action",{"_index":1058,"title":{},"body":{"license.html":{},"additional-documentation/session-checks.html":{}}}],["activate",{"_index":1342,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["activated",{"_index":1336,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["actual",{"_index":351,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["adapt",{"_index":1319,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["add",{"_index":995,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["adding",{"_index":1399,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["addition",{"_index":1339,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["additional",{"_index":337,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{}}}],["adhere",{"_index":1388,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["adjust",{"_index":1201,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["against",{"_index":61,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["alg",{"_index":49,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.charat(0",{"_index":322,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["alg.match(/^.s[0",{"_index":107,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.substr(2",{"_index":114,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg2kty(alg",{"_index":320,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["algorithm",{"_index":29,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithms",{"_index":122,"title":{},"body":{"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{}}}],["aliases",{"_index":1072,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1093,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["allow",{"_index":1138,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["allowed",{"_index":239,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["allowedalgorithms",{"_index":223,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["allowedurls",{"_index":581,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["allows",{"_index":638,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["already",{"_index":13,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["alternative",{"_index":1164,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["although",{"_index":1436,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["and/or",{"_index":1027,"title":{},"body":{"license.html":{}}}],["angular",{"_index":769,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["angular/animations",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":550,"title":{},"body":{"modules/OAuthModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":151,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["angular/compiler",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":148,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["angular/elements",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":773,"title":{},"body":{"index.html":{}}}],["another",{"_index":1155,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["anymore",{"_index":391,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["aot",{"_index":1470,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["api",{"_index":670,"title":{"additional-documentation/original-config-api.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["apis",{"_index":782,"title":{},"body":{"index.html":{}}}],["app",{"_index":873,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["app.component.html",{"_index":935,"title":{},"body":{"index.html":{}}}],["app/home.html",{"_index":945,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":893,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["applicable",{"_index":1296,"title":{},"body":{"additional-documentation/events.html":{}}}],["application",{"_index":904,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["applications",{"_index":1110,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["appmodule",{"_index":895,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["approach",{"_index":1160,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["approutermodule",{"_index":1310,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["arising",{"_index":1061,"title":{},"body":{"license.html":{}}}],["array",{"_index":582,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["array.isarray(params.jwks['keys",{"_index":273,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["aspnetcore",{"_index":1358,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["asset",{"_index":1176,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["assets",{"_index":1179,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["associated",{"_index":1015,"title":{},"body":{"license.html":{}}}],["asstring",{"_index":92,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["assumes",{"_index":872,"title":{},"body":{"index.html":{}}}],["async",{"_index":25,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["at_hash",{"_index":60,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["athash",{"_index":98,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["attacks",{"_index":365,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["auth",{"_index":375,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["auth.config",{"_index":930,"title":{},"body":{"index.html":{}}}],["auth_config",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcodeflowconfig",{"_index":1098,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["authconfig",{"_index":911,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["authenticated",{"_index":1354,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["authentication",{"_index":991,"title":{},"body":{"index.html":{}}}],["authorization_endpoint",{"_index":453,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["authors",{"_index":1051,"title":{},"body":{"license.html":{}}}],["authstorage",{"_index":139,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["automate",{"_index":968,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["automatically",{"_index":706,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{}}}],["available",{"_index":989,"title":{},"body":{"index.html":{},"modules.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["avoid",{"_index":363,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["await",{"_index":89,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["b",{"_index":1429,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["b64decodeunicode",{"_index":760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b64decodeunicode(str",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["back",{"_index":1374,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["backend",{"_index":788,"title":{},"body":{"index.html":{}}}],["base",{"_index":1380,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["base64",{"_index":70,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"dependencies.html":{}}}],["base64urlencode",{"_index":69,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{}}}],["base64urlencode(leftmosthalf",{"_index":99,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["base64urlencode(str",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":1300,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["bearer",{"_index":205,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["beaugrand",{"_index":1398,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["before",{"_index":707,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["beginning",{"_index":780,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{}}}],["below",{"_index":1136,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["best",{"_index":361,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["better",{"_index":696,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["between",{"_index":1131,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["blog",{"_index":1351,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["boolean",{"_index":174,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["bootstrap",{"_index":746,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bootstrapping",{"_index":1126,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["both",{"_index":1134,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["breaking",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1065,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":738,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["bug",{"_index":825,"title":{},"body":{"index.html":{}}}],["bugfixes",{"_index":829,"title":{},"body":{"index.html":{}}}],["build",{"_index":997,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bundle",{"_index":784,"title":{},"body":{"index.html":{}}}],["bundling",{"_index":806,"title":{},"body":{"index.html":{}}}],["bytearrayasstring",{"_index":332,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["c",{"_index":1003,"title":{},"body":{"license.html":{}}}],["calchash",{"_index":20,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calchash(valuetohash",{"_index":27,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calculates",{"_index":32,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["call",{"_index":716,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["callback",{"_index":1247,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"additional-documentation/callback-after-login.html":{}}}],["called",{"_index":373,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["calling",{"_index":966,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/session-checks.html":{}}}],["calls",{"_index":576,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["care",{"_index":1143,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["case",{"_index":323,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["cases",{"_index":1327,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["catch",{"_index":980,"title":{},"body":{"index.html":{}}}],["catch(err",{"_index":1185,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["catcherror",{"_index":154,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["change",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":661,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["charactes",{"_index":639,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["charge",{"_index":1010,"title":{},"body":{"license.html":{}}}],["check",{"_index":360,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{}}}],["check_session_iframe",{"_index":458,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["checks",{"_index":1298,"title":{"additional-documentation/session-checks.html":{}},"body":{"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["checkurl(url",{"_index":173,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["circular",{"_index":1233,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["cites",{"_index":1437,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["cjs",{"_index":1407,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["claim",{"_index":1054,"title":{},"body":{"license.html":{}}}],["claim_types_supported",{"_index":476,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims",{"_index":429,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims.given_name",{"_index":950,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims_parameter_supported",{"_index":478,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims_supported",{"_index":477,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claimsathash",{"_index":100,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"overview.html":{}}}],["clear",{"_index":386,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["cli",{"_index":1175,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["cli.json",{"_index":1178,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["client",{"_index":417,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["clientid",{"_index":919,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["clientids",{"_index":878,"title":{},"body":{"index.html":{}}}],["closed",{"_index":836,"title":{},"body":{"index.html":{}}}],["code",{"_index":796,"title":{"additional-documentation/code-flow-+-pcke.html":{}},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["code_error",{"_index":508,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["codes",{"_index":1218,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["come",{"_index":1163,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["commands",{"_index":850,"title":{},"body":{"index.html":{}}}],["commonjs",{"_index":805,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":549,"title":{},"body":{"modules/OAuthModule.html":{}}}],["communication",{"_index":1189,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["compat",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["compatible",{"_index":400,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["compensates",{"_index":1150,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["compodoc/compodoc",{"_index":853,"title":{},"body":{"index.html":{}}}],["component",{"_index":931,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["conditions",{"_index":1034,"title":{},"body":{"license.html":{}}}],["config",{"_index":546,"title":{"additional-documentation/original-config-api.html":{}},"body":{"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["configuration",{"_index":864,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["configure",{"_index":908,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["configured",{"_index":943,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["configuring",{"_index":896,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["connect",{"_index":438,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["connection",{"_index":1062,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1392,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["console",{"_index":401,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["console.debug(\"logged",{"_index":1252,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.debug('given_name",{"_index":1459,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('ok",{"_index":1465,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('refresh",{"_index":1183,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["console.debug('state",{"_index":1088,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["console.debug('validatesignature",{"_index":278,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["console.debug('your",{"_index":1347,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["console.debug(context",{"_index":1253,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.error('actual",{"_index":103,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('exptected",{"_index":102,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('refresh",{"_index":1186,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["console.error(error",{"_index":294,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["console.error(event",{"_index":1278,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.log(e));or",{"_index":1271,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.warn(event",{"_index":1279,"title":{},"body":{"additional-documentation/events.html":{}}}],["const",{"_index":169,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["constructor",{"_index":130,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["constructor(authstorage",{"_index":131,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["constructor(private",{"_index":936,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["constructor(readonly",{"_index":520,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["constructor(type",{"_index":495,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["contain",{"_index":824,"title":{},"body":{"index.html":{}}}],["contains",{"_index":952,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["context",{"_index":1249,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["contract",{"_index":1059,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":841,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":831,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":673,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["cookie",{"_index":1157,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["copied",{"_index":1172,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["copies",{"_index":1029,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1013,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1002,"title":{},"body":{"license.html":{}}}],["core",{"_index":439,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["cought",{"_index":1228,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["create",{"_index":421,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["createdefaultlogger",{"_index":559,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["createdefaultstorage",{"_index":560,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":1232,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["credentials",{"_index":1454,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["credits",{"_index":771,"title":{},"body":{"index.html":{}}}],["critical",{"_index":828,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":121,"title":{},"body":{"classes/CryptoHandler.html":{}}}],["cryptohandler",{"_index":118,"title":{"classes/CryptoHandler.html":{}},"body":{"classes/CryptoHandler.html":{},"modules/OAuthModule.html":{}}}],["current",{"_index":247,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{}}}],["custom",{"_index":347,"title":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customhashfragment",{"_index":341,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{}}}],["customize",{"_index":1466,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customqueryparams",{"_index":1255,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["customurlvalidation",{"_index":583,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["cycle",{"_index":820,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1055,"title":{},"body":{"license.html":{}}}],["data",{"_index":427,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-password-flow.html":{}}}],["deal",{"_index":1017,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1063,"title":{},"body":{"license.html":{}}}],["debug",{"_index":527,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["debug(message",{"_index":408,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["debugging",{"_index":1268,"title":{},"body":{"additional-documentation/events.html":{}}}],["decide",{"_index":1331,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["declarations",{"_index":563,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["declare",{"_index":260,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["decodekey",{"_index":642,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodekey(k",{"_index":646,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(hash",{"_index":619,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(k",{"_index":657,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(v",{"_index":658,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue",{"_index":643,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue(v",{"_index":648,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["default",{"_index":226,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["defaultextension",{"_index":1408,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["defaultoauthinterceptor",{"_index":125,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["defaults",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["define",{"_index":693,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["defines",{"_index":367,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["deleted",{"_index":1338,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["demand",{"_index":830,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["demands",{"_index":718,"title":{},"body":{"changelog.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["demo",{"_index":880,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["demonstration",{"_index":1250,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["dependencies",{"_index":731,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":405,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["depending",{"_index":1122,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["deprecated",{"_index":378,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["deps",{"_index":1402,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["described",{"_index":1424,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["design",{"_index":1462,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["details",{"_index":1289,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{}}}],["detects",{"_index":374,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["di",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["differ",{"_index":246,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["different",{"_index":1274,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["differs",{"_index":1130,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["directly",{"_index":964,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["directory",{"_index":1174,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["disable",{"_index":357,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["disabled",{"_index":1287,"title":{},"body":{"additional-documentation/events.html":{}}}],["disableoauth2statecheck",{"_index":342,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["disablepkci",{"_index":1117,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["discovery",{"_index":219,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["discovery_document_load_error",{"_index":503,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_loaded",{"_index":499,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["discovery_document_validation_error",{"_index":504,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["display",{"_index":960,"title":{},"body":{"index.html":{}}}],["display_values_supported",{"_index":475,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["displayed",{"_index":390,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["distribute",{"_index":1025,"title":{},"body":{"license.html":{}}}],["docs",{"_index":842,"title":{},"body":{"index.html":{}}}],["document",{"_index":220,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["documentation",{"_index":698,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["doesn't",{"_index":1375,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["doing",{"_index":370,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["domains",{"_index":1386,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["don't",{"_index":959,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["dosn't",{"_index":1416,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["draft",{"_index":1094,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["dummy",{"_index":1434,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["dummyclientsecret",{"_index":1111,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["during",{"_index":1286,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["dynamic",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":326,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["e.type",{"_index":197,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/session-checks.html":{}}}],["each",{"_index":823,"title":{},"body":{"index.html":{}}}],["ease",{"_index":863,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["easiest",{"_index":1235,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ec",{"_index":327,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["elements",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":927,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["enable",{"_index":1368,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["encodekey",{"_index":644,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodekey(k",{"_index":651,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encoder",{"_index":637,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{},"dependencies.html":{}}}],["encodeuricomponent(k",{"_index":655,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeuricomponent(v",{"_index":656,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue",{"_index":645,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue(v",{"_index":653,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encounter",{"_index":1281,"title":{},"body":{"additional-documentation/events.html":{}}}],["end_session_endpoint",{"_index":459,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["endpoint",{"_index":436,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["endpoints",{"_index":1378,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["endpont",{"_index":1448,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ends",{"_index":1337,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["enforce",{"_index":1106,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["enhancements",{"_index":839,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":1377,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["enter",{"_index":1421,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["enters",{"_index":858,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1301,"title":{},"body":{"additional-documentation/events.html":{}}}],["environment",{"_index":800,"title":{},"body":{"index.html":{}}}],["err",{"_index":589,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["err));when",{"_index":1187,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["error",{"_index":163,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["error('algorithm",{"_index":111,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["error('array",{"_index":276,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["error('cannot",{"_index":328,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["error('parameter",{"_index":267,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["error(message",{"_index":413,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["errorhandler",{"_index":134,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["errors",{"_index":1216,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["es256",{"_index":233,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["es384",{"_index":234,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["escapedkey",{"_index":628,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["escapedvalue",{"_index":629,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["etc",{"_index":891,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["event",{"_index":704,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["events",{"_index":379,"title":{"additional-documentation/events.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["events.ts",{"_index":1302,"title":{},"body":{"additional-documentation/events.html":{}}}],["eventtype",{"_index":496,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":1225,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["execute",{"_index":1125,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["expected",{"_index":268,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/events.html":{}}}],["expired",{"_index":1463,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["expires",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["expires_in",{"_index":443,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["explicitly",{"_index":1330,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["export",{"_index":72,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["exports",{"_index":564,"title":{},"body":{"modules/OAuthModule.html":{},"overview.html":{}}}],["express",{"_index":1042,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1472,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["extends",{"_index":221,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["extensive",{"_index":1273,"title":{},"body":{"additional-documentation/events.html":{}}}],["fact",{"_index":1151,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["factor",{"_index":1202,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["factories",{"_index":561,"title":{},"body":{"modules/OAuthModule.html":{}}}],["factory",{"_index":1469,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["fail",{"_index":715,"title":{},"body":{"changelog.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["fails",{"_index":1376,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{}}],["false",{"_index":194,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["features",{"_index":664,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":832,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["fetch",{"_index":1127,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["fetching",{"_index":1452,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["field",{"_index":50,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{}}}],["files",{"_index":1016,"title":{},"body":{"license.html":{}}}],["filter",{"_index":155,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["filter(e",{"_index":196,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["filter(token",{"_index":192,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["find",{"_index":1080,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/original-config-api.html":{}}}],["fine",{"_index":983,"title":{},"body":{"index.html":{}}}],["fired",{"_index":1196,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["first",{"_index":922,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["fitness",{"_index":1047,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":826,"title":{},"body":{"index.html":{}}}],["flight",{"_index":933,"title":{},"body":{"index.html":{}}}],["flow",{"_index":701,"title":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["flows",{"_index":859,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["folder",{"_index":844,"title":{},"body":{"index.html":{}}}],["following",{"_index":849,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["follows",{"_index":1468,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["form",{"_index":941,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["format",{"_index":1406,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["former",{"_index":1323,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["forroot",{"_index":542,"title":{},"body":{"modules/OAuthModule.html":{}}}],["forroot(config",{"_index":543,"title":{},"body":{"modules/OAuthModule.html":{}}}],["found",{"_index":293,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["four",{"_index":1112,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["fragment",{"_index":348,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["free",{"_index":833,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["full",{"_index":1299,"title":{},"body":{"additional-documentation/events.html":{}}}],["function",{"_index":371,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["functions",{"_index":759,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1032,"title":{},"body":{"license.html":{}}}],["further",{"_index":866,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["g",{"_index":724,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["geheim",{"_index":1442,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then",{"_index":1461,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then((resp",{"_index":1456,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["general",{"_index":979,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["generate",{"_index":848,"title":{},"body":{"index.html":{}}}],["generator",{"_index":772,"title":{},"body":{"index.html":{}}}],["gethashfragmentparams",{"_index":611,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["gethashfragmentparams(customhashfragment",{"_index":613,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["getitem",{"_index":596,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["getitem(key",{"_index":423,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["gets",{"_index":907,"title":{},"body":{"index.html":{}}}],["getting",{"_index":659,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["give",{"_index":1190,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["gone",{"_index":1294,"title":{},"body":{"additional-documentation/events.html":{}}}],["google",{"_index":1383,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["graceperiod",{"_index":313,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["graceperiodinsec",{"_index":224,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["grant_types_supported",{"_index":466,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["granted",{"_index":1009,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1064,"title":{},"body":{"modules.html":{}}}],["great",{"_index":1350,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["guide",{"_index":1081,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["half",{"_index":1205,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["hallo",{"_index":954,"title":{},"body":{"index.html":{}}}],["handle(req",{"_index":188,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["handleerror",{"_index":585,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["handleerror(err",{"_index":586,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler",{"_index":164,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler.ts",{"_index":8,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handler.ts:10",{"_index":588,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{}}}],["handler.ts:11",{"_index":488,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:141",{"_index":248,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:148",{"_index":250,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:20",{"_index":634,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:21",{"_index":238,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:27",{"_index":633,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:39",{"_index":66,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{}}}],["handler.ts:41",{"_index":254,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:44",{"_index":58,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:5",{"_index":595,"title":{},"body":{"classes/OAuthResourceServerErrorHandler.html":{}}}],["handler.ts:6",{"_index":123,"title":{},"body":{"classes/CryptoHandler.html":{}}}],["handler.ts:69",{"_index":47,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:8",{"_index":489,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:86",{"_index":31,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handlers",{"_index":80,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handling",{"_index":1214,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["hash",{"_index":33,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["hash.indexof",{"_index":620,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(1",{"_index":623,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(questionmarkposition",{"_index":622,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hashalg",{"_index":86,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hashalg.digeststring(valuetohash",{"_index":331,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hashing",{"_index":779,"title":{},"body":{"index.html":{}}}],["hashlocationstrategy",{"_index":804,"title":{},"body":{"index.html":{}}}],["hashstrategy",{"_index":984,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["header",{"_index":55,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["headers",{"_index":206,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["helper",{"_index":71,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["helper.service",{"_index":554,"title":{},"body":{"modules/OAuthModule.html":{}}}],["helper.service.ts",{"_index":610,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:25",{"_index":616,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:5",{"_index":614,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.ts",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hence",{"_index":910,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["here",{"_index":1132,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["here's",{"_index":1280,"title":{},"body":{"additional-documentation/events.html":{}}}],["hereby",{"_index":1008,"title":{},"body":{"license.html":{}}}],["hexstring",{"_index":251,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hidden",{"_index":1153,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["holders",{"_index":1052,"title":{},"body":{"license.html":{}}}],["home",{"_index":1251,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["homecomponent",{"_index":894,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["hook",{"_index":393,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["hooked",{"_index":81,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hs256",{"_index":227,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hs384",{"_index":228,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["hs512",{"_index":229,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["http",{"_index":1217,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["http://localhost:8080",{"_index":875,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/#/home",{"_index":1318,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["http://openid.net/specs/openid",{"_index":437,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["http://www.angular.at/api",{"_index":974,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["http_interceptors",{"_index":551,"title":{},"body":{"modules/OAuthModule.html":{}}}],["httpclientmodule",{"_index":552,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["httperrorresponse",{"_index":1240,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpevent",{"_index":149,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httphandler",{"_index":143,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptor",{"_index":150,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptors",{"_index":1210,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{}}],["httpparametercodec",{"_index":641,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["httprequest",{"_index":141,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpresponse",{"_index":587,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["https",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["https://demo.identityserver.io",{"_index":1099,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["https://github.com/lankaapura/angular",{"_index":1357,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://github.com/manfredsteyer/angular",{"_index":795,"title":{},"body":{"index.html":{}}}],["https://manfredsteyer.github.io/angular",{"_index":797,"title":{},"body":{"index.html":{}}}],["https://medium.com/lankapura/angular",{"_index":1353,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://steyer",{"_index":912,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["i.e",{"_index":1382,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["id",{"_index":308,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token",{"_index":51,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token's",{"_index":53,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["id_token_encryption_alg_values_supported",{"_index":472,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_encryption_enc_values_supported",{"_index":473,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_signing_alg_values_supported",{"_index":471,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idclaims",{"_index":430,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ideas",{"_index":838,"title":{},"body":{"index.html":{}}}],["identity",{"_index":786,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["identityserver",{"_index":809,"title":{},"body":{"index.html":{}}}],["idsvr",{"_index":1359,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["idtoken",{"_index":74,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaims",{"_index":77,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaimsjson",{"_index":432,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenexpiresat",{"_index":434,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenhandler",{"_index":270,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["idtokenheader",{"_index":76,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenheaderjson",{"_index":433,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["iframe",{"_index":1154,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["iframes",{"_index":355,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["implcit",{"_index":1433,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["implemantion",{"_index":1226,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["implement",{"_index":899,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["implementation",{"_index":11,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["implementations",{"_index":422,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["implemented",{"_index":1333,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["implementing",{"_index":702,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["implements",{"_index":14,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["implicit",{"_index":700,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["implied",{"_index":1043,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["important",{"_index":1113,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["imports",{"_index":562,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["included",{"_index":376,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"license.html":{}}}],["includes",{"_index":369,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["including",{"_index":1020,"title":{},"body":{"license.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":917,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["indexable",{"_index":631,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["infer",{"_index":329,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["inferhashalgorithm",{"_index":24,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{}}}],["inferhashalgorithm(jwtheader",{"_index":45,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["infers",{"_index":48,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["info(message",{"_index":410,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["info.state",{"_index":1089,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["information",{"_index":985,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["informs",{"_index":1264,"title":{},"body":{"additional-documentation/events.html":{}}}],["inherited",{"_index":255,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["initial",{"_index":1305,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initialize",{"_index":1118,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["initializes",{"_index":1121,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["initialnavigation",{"_index":1313,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initimplicitflow",{"_index":944,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["initloginflow",{"_index":1120,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["inject",{"_index":1239,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectable",{"_index":147,"title":{"injectables/UrlHelperService.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectables",{"_index":608,"title":{},"body":{"injectables/UrlHelperService.html":{},"overview.html":{}}}],["injecting",{"_index":1231,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injection",{"_index":406,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["injectiontoken('auth_config",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":852,"title":{},"body":{"index.html":{}}}],["installing",{"_index":889,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1203,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["instanceof",{"_index":1277,"title":{},"body":{"additional-documentation/events.html":{}}}],["instead",{"_index":350,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["interaction",{"_index":1159,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["intercept",{"_index":129,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["intercept(req",{"_index":140,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["intercepted",{"_index":577,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["interceptor",{"_index":124,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"index.html":{}}}],["interceptors",{"_index":126,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["interceptors/default",{"_index":557,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interceptors/resource",{"_index":556,"title":{},"body":{"modules/OAuthModule.html":{}}}],["interface",{"_index":73,"title":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["interfaces",{"_index":603,"title":{},"body":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"overview.html":{}}}],["internally",{"_index":399,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["introduced",{"_index":909,"title":{},"body":{"index.html":{}}}],["invalid_nonce_in_state",{"_index":502,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["ionic",{"_index":998,"title":{},"body":{"index.html":{}}}],["isn't",{"_index":483,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["issuer",{"_index":452,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["issuer's",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":837,"title":{},"body":{"index.html":{}}}],["issuing",{"_index":1152,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["isvalid",{"_index":315,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["java",{"_index":791,"title":{},"body":{"index.html":{}}}],["job",{"_index":1314,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["js",{"_index":744,"title":{},"body":{"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["json",{"_index":214,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["jsrasign",{"_index":776,"title":{},"body":{"index.html":{}}}],["jsrsasign",{"_index":265,"title":{},"body":{"classes/JwksValidationHandler.html":{},"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["jwks",{"_index":78,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwks_load_error",{"_index":501,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["jwks_uri",{"_index":460,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["jwksvalidationhandler",{"_index":209,"title":{"classes/JwksValidationHandler.html":{}},"body":{"classes/JwksValidationHandler.html":{},"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwksvalidationhandler();in",{"_index":1326,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["jwtheader",{"_index":52,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["jwtheader['alg",{"_index":106,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["k",{"_index":290,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["k['kid",{"_index":283,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["k['kty",{"_index":291,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["k['use",{"_index":284,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["keep",{"_index":1168,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["kevin",{"_index":1397,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["key",{"_index":216,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{}}}],["keycloak",{"_index":789,"title":{},"body":{"index.html":{}}}],["keyobj",{"_index":309,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["keys",{"_index":213,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["keys.filter",{"_index":289,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["keys.find(k",{"_index":282,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["kicks",{"_index":1412,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["kid",{"_index":279,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["kind",{"_index":1041,"title":{},"body":{"license.html":{}}}],["known",{"_index":1149,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["known/openid",{"_index":1444,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["kty",{"_index":286,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["labels",{"_index":840,"title":{},"body":{"index.html":{}}}],["last",{"_index":1135,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["later",{"_index":1324,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["lates",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["leads",{"_index":1234,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{}}}],["leftmosthalf",{"_index":94,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["legend",{"_index":1067,"title":{},"body":{"overview.html":{}}}],["levels",{"_index":1275,"title":{},"body":{"additional-documentation/events.html":{}}}],["leveraging",{"_index":900,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["liability",{"_index":1056,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1053,"title":{},"body":{"license.html":{}}}],["lib",{"_index":387,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/using-password-flow.html":{}}}],["library",{"_index":774,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["library's",{"_index":1390,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["license",{"_index":1001,"title":{"license.html":{}},"body":{}}],["life",{"_index":1199,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["limitation",{"_index":1021,"title":{},"body":{"license.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["limited",{"_index":1044,"title":{},"body":{"license.html":{}}}],["line",{"_index":1177,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["list",{"_index":1141,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{}}}],["listed",{"_index":1223,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["lite",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["load",{"_index":1414,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":307,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["loadedkeys",{"_index":303,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["loading",{"_index":1457,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["loadkeys",{"_index":79,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["loaduserprofile",{"_index":1290,"title":{},"body":{"additional-documentation/events.html":{}}}],["local",{"_index":725,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["localhost:[8080",{"_index":883,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":419,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["location.origin",{"_index":1171,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["locationstrategy",{"_index":1303,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["log",{"_index":528,"title":{},"body":{"classes/OAuthLogger.html":{},"changelog.html":{},"additional-documentation/events.html":{}}}],["log(message",{"_index":411,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logged",{"_index":1156,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["loggin",{"_index":1449,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["logging",{"_index":397,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["login",{"_index":690,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["loginoptions",{"_index":335,"title":{"classes/LoginOptions.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logoff",{"_index":947,"title":{},"body":{"index.html":{}}}],["logout",{"_index":519,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["logs",{"_index":689,"title":{},"body":{"changelog.html":{},"additional-documentation/events.html":{}}}],["long",{"_index":1297,"title":{},"body":{"additional-documentation/events.html":{}}}],["longer",{"_index":1272,"title":{},"body":{"additional-documentation/events.html":{}}}],["look",{"_index":976,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["lower",{"_index":973,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["main",{"_index":1169,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/using-systemjs.html":{}}}],["maintain",{"_index":1391,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["major",{"_index":822,"title":{},"body":{"index.html":{}}}],["make",{"_index":17,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["management",{"_index":685,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["manfred",{"_index":1005,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1315,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["map",{"_index":156,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/using-systemjs.html":{}}}],["map(_",{"_index":200,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["matching",{"_index":116,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["matchingkeys",{"_index":288,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["matchingkeys.length",{"_index":292,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["matchingkeys[0",{"_index":300,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["max/geheim",{"_index":877,"title":{},"body":{"index.html":{}}}],["means",{"_index":687,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["mentioned",{"_index":870,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{}}}],["merchantability",{"_index":1046,"title":{},"body":{"license.html":{}}}],["merge",{"_index":152,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"license.html":{}}}],["mergemap",{"_index":158,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["mergemap(token",{"_index":204,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["message",{"_index":377,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["meta",{"_index":1401,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["method",{"_index":15,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{}}}],["mind",{"_index":1105,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["minimize",{"_index":783,"title":{},"body":{"index.html":{}}}],["minutes",{"_index":994,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":758,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":277,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["modify",{"_index":1023,"title":{},"body":{"license.html":{}}}],["module",{"_index":536,"title":{"modules/OAuthModule.html":{}},"body":{"overview.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["module.config",{"_index":166,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["module.config.ts",{"_index":571,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:11",{"_index":592,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:12",{"_index":594,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:13",{"_index":593,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:2",{"_index":574,"title":{},"body":{"classes/OAuthModuleConfig.html":{}}}],["moduleconfig",{"_index":136,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["modules",{"_index":538,"title":{"modules.html":{}},"body":{"modules/OAuthModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":547,"title":{},"body":{"modules/OAuthModule.html":{}}}],["more",{"_index":297,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["msec",{"_index":1193,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["much",{"_index":816,"title":{},"body":{"index.html":{}}}],["multi",{"_index":569,"title":{},"body":{"modules/OAuthModule.html":{}}}],["name",{"_index":39,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["navigation",{"_index":1306,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["need",{"_index":819,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["needed",{"_index":1102,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["net",{"_index":810,"title":{},"body":{"index.html":{}}}],["net/.net",{"_index":787,"title":{},"body":{"index.html":{}}}],["new",{"_index":110,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["newer",{"_index":814,"title":{},"body":{"index.html":{}}}],["next",{"_index":142,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req",{"_index":183,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req).catch(err",{"_index":1246,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ngmodule",{"_index":548,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["node_modules/jsrsasign/lib/jsrsasign",{"_index":1409,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["nonce",{"_index":368,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{}}}],["noninfringement",{"_index":1050,"title":{},"body":{"license.html":{}}}],["normally",{"_index":384,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["note",{"_index":1147,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["notes",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":485,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["notice",{"_index":1036,"title":{},"body":{"license.html":{}}}],["notification",{"_index":683,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["notifications",{"_index":1343,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["notified",{"_index":688,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["npm",{"_index":851,"title":{},"body":{"index.html":{}}}],["null",{"_index":424,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["nullvalidationhandler",{"_index":481,"title":{"classes/NullValidationHandler.html":{}},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["number",{"_index":240,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["oauth",{"_index":165,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauth.interceptor",{"_index":558,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oauth.interceptor.ts",{"_index":128,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["oauth.interceptor.ts:19",{"_index":138,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:40",{"_index":144,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth2",{"_index":358,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauth2/oidc",{"_index":901,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["oautherrorevent",{"_index":492,"title":{"classes/OAuthErrorEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"additional-documentation/events.html":{}}}],["oauthevent",{"_index":494,"title":{"classes/OAuthEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthinfoevent",{"_index":524,"title":{"classes/OAuthInfoEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthlogger",{"_index":407,"title":{"classes/OAuthLogger.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oauthmodule",{"_index":537,"title":{"modules/OAuthModule.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"modules.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmodule.forroot",{"_index":892,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmoduleconfig",{"_index":137,"title":{"classes/OAuthModuleConfig.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthnoopresourceservererrorhandler",{"_index":555,"title":{"classes/OAuthNoopResourceServerErrorHandler.html":{}},"body":{"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthresourceserverconfig",{"_index":573,"title":{"classes/OAuthResourceServerConfig.html":{}},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["oauthresourceservererrorhandler",{"_index":135,"title":{"classes/OAuthResourceServerErrorHandler.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthservice",{"_index":133,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["oauthstorage",{"_index":132,"title":{"classes/OAuthStorage.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthsuccessevent",{"_index":521,"title":{"classes/OAuthSuccessEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["observable",{"_index":146,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["obtaining",{"_index":1012,"title":{},"body":{"license.html":{}}}],["occur",{"_index":1267,"title":{},"body":{"additional-documentation/events.html":{}}}],["of(this.oauthservice.getaccesstoken()).pipe",{"_index":191,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["offline_access",{"_index":1114,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["oidc",{"_index":366,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oidc.umd.js",{"_index":1405,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["oidc/docs",{"_index":798,"title":{},"body":{"index.html":{}}}],["oidcdiscoverydoc",{"_index":451,"title":{"interfaces/OidcDiscoveryDoc.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oidic.module.ts",{"_index":540,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidic.module.ts:27",{"_index":545,"title":{},"body":{"modules/OAuthModule.html":{}}}],["ok",{"_index":1184,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["okta",{"_index":992,"title":{},"body":{"index.html":{}}}],["one",{"_index":212,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["online",{"_index":990,"title":{},"body":{"index.html":{}}}],["onloginerror",{"_index":343,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ontokenreceived",{"_index":344,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{}}}],["openid",{"_index":450,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["option",{"_index":1335,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["optional",{"_index":41,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["optionalparams",{"_index":409,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["options",{"_index":338,"title":{},"body":{"classes/LoginOptions.html":{},"additional-documentation/events.html":{}}}],["original",{"_index":671,"title":{"additional-documentation/original-config-api.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["otherparam",{"_index":1262,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["otherwise",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["out",{"_index":680,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["output",{"_index":1173,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/callback-after-login.html":{}}}],["over",{"_index":1200,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["override",{"_index":19,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["overview",{"_index":1066,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":881,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["package",{"_index":730,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1321,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["page",{"_index":903,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["pair",{"_index":626,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pairs",{"_index":625,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["param",{"_index":105,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parameter",{"_index":1256,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["parameters",{"_index":37,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/custom-query-parameters.html":{}}}],["params",{"_index":64,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["params.idtoken",{"_index":266,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.idtokenclaims['at_hash'].replace(/=/g",{"_index":101,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["params.idtokenheader",{"_index":269,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.idtokenheader['alg",{"_index":281,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.idtokenheader['kid",{"_index":280,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.jwks",{"_index":271,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.jwks['keys",{"_index":272,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.jwks['keys'].length",{"_index":274,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["params.loadkeys",{"_index":301,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["parent.postmessage(location.hash",{"_index":1170,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["parse",{"_index":1372,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["parsed",{"_index":54,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parsedidtoken",{"_index":431,"title":{"interfaces/ParsedIdToken.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["parsequerystring",{"_index":612,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["parsequerystring(querystring",{"_index":615,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["particular",{"_index":1048,"title":{},"body":{"license.html":{}}}],["pass",{"_index":354,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["passed",{"_index":34,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["passes",{"_index":1227,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["passt",{"_index":339,"title":{},"body":{"classes/LoginOptions.html":{}}}],["password",{"_index":857,"title":{"additional-documentation/using-password-flow.html":{}},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["passwords",{"_index":640,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["path",{"_index":982,"title":{},"body":{"index.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pathlocationstrategy",{"_index":803,"title":{},"body":{"index.html":{}}}],["pcke",{"_index":1090,"title":{"additional-documentation/code-flow-+-pcke.html":{}},"body":{}}],["perform",{"_index":1180,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["performs",{"_index":1304,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["period",{"_index":243,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["permission",{"_index":1007,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":920,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["permit",{"_index":1030,"title":{},"body":{"license.html":{}}}],["person",{"_index":1011,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1031,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":1422,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["pingone",{"_index":1385,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pipe",{"_index":202,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pipe(catcherror(err",{"_index":189,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pkce",{"_index":856,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["plan",{"_index":821,"title":{},"body":{"index.html":{}}}],["please",{"_index":298,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["portions",{"_index":1039,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":1430,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["post",{"_index":1352,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["ppanthony",{"_index":1403,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["practice",{"_index":362,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["practices",{"_index":1107,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["prefixes",{"_index":971,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["preserving",{"_index":1083,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["prevent",{"_index":1237,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["preventclearhashafterlogin",{"_index":345,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["prevents",{"_index":1188,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["private",{"_index":172,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["profile",{"_index":714,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["project's",{"_index":1360,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["projects/.../base64",{"_index":761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../default",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../events.ts",{"_index":1073,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../factories.ts",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../tokens.ts",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/angular",{"_index":539,"title":{},"body":{"modules/OAuthModule.html":{}}}],["projects/lib/src/base64",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/encoder.ts",{"_index":636,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:10",{"_index":654,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:14",{"_index":647,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:18",{"_index":649,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:6",{"_index":652,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/events.ts",{"_index":493,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/events.ts:25",{"_index":525,"title":{},"body":{"classes/OAuthEvent.html":{}}}],["projects/lib/src/events.ts:29",{"_index":602,"title":{},"body":{"classes/OAuthSuccessEvent.html":{}}}],["projects/lib/src/events.ts:35",{"_index":526,"title":{},"body":{"classes/OAuthInfoEvent.html":{}}}],["projects/lib/src/events.ts:41",{"_index":498,"title":{},"body":{"classes/OAuthErrorEvent.html":{}}}],["projects/lib/src/factories.ts",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/interceptors/default",{"_index":127,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/interceptors/resource",{"_index":584,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["projects/lib/src/oauth",{"_index":570,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["projects/lib/src/token",{"_index":6,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["projects/lib/src/tokens.ts",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/types.ts",{"_index":336,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:11",{"_index":380,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:121",{"_index":632,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:18",{"_index":392,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:26",{"_index":372,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:33",{"_index":346,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:43",{"_index":356,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:50",{"_index":383,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:60",{"_index":530,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:61",{"_index":533,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:62",{"_index":534,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:63",{"_index":535,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:64",{"_index":532,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:74",{"_index":599,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:75",{"_index":600,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:76",{"_index":601,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:84",{"_index":606,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:85",{"_index":604,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:86",{"_index":605,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:87",{"_index":607,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/url",{"_index":609,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["promise",{"_index":44,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["promise.reject('signature",{"_index":318,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.reject(error",{"_index":295,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.resolve",{"_index":317,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.resolve(bytearrayasstring",{"_index":334,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["promise.resolve(null",{"_index":490,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["promise.resolve(true",{"_index":491,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["properties",{"_index":222,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["property",{"_index":306,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{}}}],["proposes",{"_index":1139,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["protected",{"_index":23,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["provding",{"_index":1224,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["provide",{"_index":402,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provided",{"_index":218,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"license.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["provider",{"_index":691,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provider's",{"_index":906,"title":{},"body":{"index.html":{}}}],["providers",{"_index":565,"title":{},"body":{"modules/OAuthModule.html":{},"overview.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provides",{"_index":1238,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["providing",{"_index":703,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["prs",{"_index":827,"title":{},"body":{"index.html":{}}}],["ps256",{"_index":235,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["ps384",{"_index":236,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["ps512",{"_index":237,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["public",{"_index":84,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["publish",{"_index":1024,"title":{},"body":{"license.html":{}}}],["published",{"_index":1282,"title":{},"body":{"additional-documentation/events.html":{}}}],["publishes",{"_index":1265,"title":{},"body":{"additional-documentation/events.html":{}}}],["pull",{"_index":834,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1049,"title":{},"body":{"license.html":{},"additional-documentation/callback-after-login.html":{}}}],["put",{"_index":1221,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["pwa",{"_index":996,"title":{},"body":{"index.html":{}}}],["query",{"_index":1254,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["querying",{"_index":862,"title":{},"body":{"index.html":{}}}],["querystring",{"_index":617,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["querystring.split",{"_index":630,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["question",{"_index":1341,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["questionmarkposition",{"_index":621,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["quite",{"_index":1431,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["r",{"_index":324,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["read",{"_index":388,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["reading",{"_index":1307,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["readme",{"_index":1082,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["readonly",{"_index":522,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["reason",{"_index":497,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["receive",{"_index":1328,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["received",{"_index":62,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["received_first_token",{"_index":500,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["receivedtokens",{"_index":395,"title":{"classes/ReceivedTokens.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["receiving",{"_index":1418,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["recommented",{"_index":1116,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["redhat",{"_index":790,"title":{},"body":{"index.html":{}}}],["redhat's",{"_index":811,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":914,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["redirected",{"_index":855,"title":{},"body":{"index.html":{}}}],["redirecting",{"_index":868,"title":{},"body":{"index.html":{}}}],["redirects",{"_index":965,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["redirecturi",{"_index":915,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["redirecturis",{"_index":882,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":699,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["refresh.html",{"_index":888,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{}}}],["refresh.html\";please",{"_index":1167,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["refresh_token",{"_index":444,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["refresh_tokens",{"_index":1144,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["refreshed",{"_index":1295,"title":{},"body":{"additional-documentation/events.html":{}}}],["refreshes",{"_index":353,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["refreshing",{"_index":860,"title":{"additional-documentation/refreshing-a-token.html":{}},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["regarding",{"_index":865,"title":{},"body":{"index.html":{},"additional-documentation/using-systemjs.html":{}}}],["register",{"_index":1340,"title":{},"body":{"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["registerd",{"_index":1100,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["registered",{"_index":579,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{}}}],["registration_endpoint",{"_index":461,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["related",{"_index":1215,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["relations",{"_index":1427,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["relaxed",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["relay",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":666,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["removeitem",{"_index":597,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["removeitem(key",{"_index":425,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["rendering",{"_index":1349,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"additional-documentation/server-side-rendering.html":{}}}],["represents",{"_index":428,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["req",{"_index":145,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.clone",{"_index":208,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers",{"_index":1244,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers.set('authorization",{"_index":207,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["req.url.tolowercase",{"_index":181,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["request",{"_index":921,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["request_object_signing_alg_values_supported",{"_index":474,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["requested",{"_index":1084,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["requests",{"_index":835,"title":{},"body":{"index.html":{}}}],["require",{"_index":262,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["require','jsrsasign",{"_index":1410,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["require('jsrsasign",{"_index":264,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["requirehttps",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":1142,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["reset",{"_index":1069,"title":{},"body":{"overview.html":{}}}],["resolves",{"_index":1291,"title":{},"body":{"additional-documentation/events.html":{}}}],["resource",{"_index":161,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["resources",{"_index":792,"title":{},"body":{"index.html":{}}}],["resourceserver",{"_index":572,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["resourceservererrorhandler",{"_index":578,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["respect",{"_index":1145,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["respective",{"_index":972,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["respond",{"_index":1158,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["response",{"_index":435,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_modes_supported",{"_index":465,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_types_supported",{"_index":463,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["responsetype",{"_index":1097,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["restriction",{"_index":1019,"title":{},"body":{"license.html":{}}}],["result",{"_index":115,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["results",{"_index":117,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["retrieved",{"_index":1284,"title":{},"body":{"additional-documentation/events.html":{}}}],["retry",{"_index":253,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["return",{"_index":104,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/using-password-flow.html":{}}}],["rights",{"_index":1022,"title":{},"body":{"license.html":{}}}],["risk",{"_index":487,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["root",{"_index":1309,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["route",{"_index":981,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["router",{"_index":802,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routermodule.forroot(app_routes",{"_index":1311,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routes",{"_index":1308,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routing",{"_index":978,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["rs",{"_index":263,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs.keyutil.getkey(key",{"_index":310,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs.kjur.crypto.messagedigest",{"_index":330,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs.kjur.jws.jws.verifyjwt",{"_index":316,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs256",{"_index":230,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs384",{"_index":231,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rs512",{"_index":232,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rsa",{"_index":325,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["rule",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":854,"title":{},"body":{"index.html":{}}}],["runs",{"_index":874,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"dependencies.html":{}}}],["rxjs/add/operator/catch",{"_index":1242,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/observable",{"_index":1241,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/operators",{"_index":160,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["safe",{"_index":1440,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["same",{"_index":1165,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sample",{"_index":794,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["samples",{"_index":871,"title":{},"body":{"index.html":{}}}],["saved",{"_index":1285,"title":{},"body":{"additional-documentation/events.html":{}}}],["saveimporting",{"_index":890,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":775,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":1420,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["scope",{"_index":445,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["scopes_supported",{"_index":462,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["seconds",{"_index":244,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["secret",{"_index":1103,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/using-password-flow.html":{}}}],["section",{"_index":897,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["security",{"_index":364,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["see",{"_index":665,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["selector",{"_index":932,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1028,"title":{},"body":{"license.html":{}}}],["send",{"_index":580,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["sendaccesstoken",{"_index":186,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["sends",{"_index":905,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{}}}],["sense",{"_index":1438,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["separate",{"_index":1133,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["separatorindex",{"_index":627,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["server",{"_index":162,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["server's",{"_index":869,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity",{"_index":913,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["server.azurewebsites.net/identity/.well",{"_index":1443,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/authorize",{"_index":1362,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/endsession",{"_index":1370,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/token",{"_index":1447,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/userinfo",{"_index":1451,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.code",{"_index":1101,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["servers",{"_index":988,"title":{},"body":{"index.html":{}}}],["service",{"_index":168,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["service_documentation",{"_index":479,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["session",{"_index":681,"title":{"additional-documentation/session-checks.html":{}},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["session_changed",{"_index":516,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_error",{"_index":517,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["session_terminated",{"_index":518,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{}}}],["session_terminated')).subscribe(e",{"_index":1346,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionchecksenabled",{"_index":1344,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionstorage",{"_index":420,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["set",{"_index":217,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["set('authorization",{"_index":1245,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["setitem",{"_index":598,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["setitem(key",{"_index":426,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["setstorage",{"_index":717,"title":{},"body":{"changelog.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["setting",{"_index":963,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["setup",{"_index":977,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["setupautomaticsilentrefresh",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["several",{"_index":1381,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sha",{"_index":113,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["sha256(accesstoken",{"_index":91,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["shall",{"_index":1037,"title":{},"body":{"license.html":{}}}],["share",{"_index":1379,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sharing",{"_index":1404,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["ship",{"_index":1428,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["short",{"_index":1269,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["showdebuginformation",{"_index":1115,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["shown",{"_index":1124,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["shows",{"_index":898,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-password-flow.html":{}}}],["side",{"_index":418,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/server-side-rendering.html":{}}}],["sig",{"_index":285,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["sign",{"_index":679,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["signature",{"_index":67,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["signs",{"_index":1332,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["silent",{"_index":352,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["silent_refresh_error",{"_index":511,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silent_refresh_timeout",{"_index":513,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silently_refreshed",{"_index":512,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silentrefresh",{"_index":1181,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["silentrefreshredirecturi",{"_index":1162,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{}}}],["silentrefreshtimeout",{"_index":1192,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["similar",{"_index":1432,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["simple",{"_index":414,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["single",{"_index":678,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["site",{"_index":999,"title":{},"body":{"index.html":{}}}],["size",{"_index":785,"title":{},"body":{"index.html":{}}}],["skip",{"_index":486,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["skipping",{"_index":958,"title":{},"body":{"index.html":{}}}],["skips",{"_index":1325,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["smaller",{"_index":817,"title":{},"body":{"index.html":{}}}],["snippet",{"_index":951,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{}}}],["software",{"_index":1014,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1096,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["somevalue",{"_index":1263,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["sources",{"_index":793,"title":{},"body":{"index.html":{}}}],["spa",{"_index":879,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["spa's",{"_index":918,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["spas",{"_index":1104,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["spec",{"_index":1288,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["specific",{"_index":926,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["specification",{"_index":1389,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["specifies",{"_index":1140,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["specify",{"_index":299,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["specs",{"_index":686,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["src",{"_index":843,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1137,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-password-flow.html":{}}}],["start",{"_index":1394,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["started",{"_index":660,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{}}}],["starting",{"_index":1258,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["starts",{"_index":727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["startup",{"_index":1411,"title":{},"body":{"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["state",{"_index":359,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/events.html":{}}}],["static",{"_index":541,"title":{},"body":{"modules/OAuthModule.html":{}}}],["status",{"_index":682,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["steyer",{"_index":1006,"title":{},"body":{"license.html":{}}}],["still",{"_index":672,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["storage",{"_index":415,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["storagefactory",{"_index":1471,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["stored",{"_index":1292,"title":{},"body":{"additional-documentation/events.html":{}}}],["storing",{"_index":416,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["str",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strategy",{"_index":1129,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["stream",{"_index":1266,"title":{},"body":{"additional-documentation/events.html":{}}}],["streamline",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["strict",{"_index":1419,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["strictdiscoverydocumentvalidation",{"_index":729,"title":{},"body":{"changelog.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["strong",{"_index":1425,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["structured",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":449,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["subject",{"_index":1033,"title":{},"body":{"license.html":{}}}],["subject_types_supported",{"_index":467,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["sublicense",{"_index":1026,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1038,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1086,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["successful",{"_index":1248,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["successfully",{"_index":381,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/events.html":{}}}],["such",{"_index":1109,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["suitable",{"_index":902,"title":{},"body":{"index.html":{}}}],["suited",{"_index":1423,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["summary.json",{"_index":847,"title":{},"body":{"index.html":{}}}],["super(type",{"_index":523,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["support",{"_index":770,"title":{},"body":{"index.html":{}}}],["supported",{"_index":112,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{}}}],["supports",{"_index":1092,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/session-checks.html":{}}}],["sure",{"_index":845,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["switch",{"_index":321,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["switching",{"_index":970,"title":{},"body":{"index.html":{}}}],["system.config",{"_index":1400,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["systemjs",{"_index":1395,"title":{"additional-documentation/using-systemjs.html":{}},"body":{"additional-documentation/using-systemjs.html":{}}}],["take",{"_index":157,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["take(1",{"_index":203,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["takes",{"_index":1212,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["task",{"_index":969,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["tasks",{"_index":675,"title":{},"body":{"changelog.html":{},"additional-documentation/events.html":{}}}],["tells",{"_index":961,"title":{},"body":{"index.html":{}}}],["template",{"_index":953,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":934,"title":{},"body":{"index.html":{}}}],["tenant",{"_index":1260,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["terminated",{"_index":1348,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["tested",{"_index":799,"title":{},"body":{"index.html":{}}}],["testen",{"_index":957,"title":{},"body":{"index.html":{}}}],["testing",{"_index":726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["thanks",{"_index":1396,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["that's",{"_index":1439,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["then(_",{"_index":304,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["then(info",{"_index":1182,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["then(loadedkeys",{"_index":302,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["third",{"_index":1208,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.alg2kty(alg",{"_index":287,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.allowedalgorithms",{"_index":312,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.authservice.events.subscribe(event",{"_index":1276,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.authstorage.getitem('access_token",{"_index":1243,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.calchash(params.accesstoken",{"_index":90,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.checkurl(url",{"_index":185,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.configure",{"_index":937,"title":{},"body":{"index.html":{}}}],["this.errorhandler.handleerror(err",{"_index":190,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.graceperiodinsec",{"_index":314,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.inferhashalgorithm(params.idtokenheader",{"_index":87,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.moduleconfig",{"_index":182,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver",{"_index":184,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls",{"_index":177,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls.find(u",{"_index":178,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation",{"_index":175,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation(url",{"_index":176,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.sendaccesstoken",{"_index":187,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.oauthservice.clientid",{"_index":1364,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":1128,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.configure(authconfig",{"_index":938,"title":{},"body":{"index.html":{}}}],["this.oauthservice.customqueryparams",{"_index":1259,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["this.oauthservice.dummyclientsecret",{"_index":1441,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.events.pipe",{"_index":195,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.events.pipe(filter(e",{"_index":1345,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1270,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflow('max",{"_index":1455,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile('max",{"_index":1460,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":201,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":949,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.initcodeflow();there",{"_index":1119,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.initimplicitflow('http://www.myurl.com/x/y/z');after",{"_index":1085,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["this.oauthservice.initloginflow",{"_index":946,"title":{},"body":{"index.html":{}}}],["this.oauthservice.initloginflow();also",{"_index":1123,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.issuer",{"_index":1413,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument().then",{"_index":1415,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument(url).then",{"_index":1445,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loaddiscoverydocumentandlogin",{"_index":962,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin",{"_index":940,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{}}}],["this.oauthservice.loaduserprofile",{"_index":1458,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loginurl",{"_index":1361,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.logout",{"_index":948,"title":{},"body":{"index.html":{}}}],["this.oauthservice.logouturl",{"_index":1369,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.redirecturi",{"_index":1363,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.refresh();refreshing",{"_index":1148,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.oauthservice.refreshtoken().then",{"_index":1464,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.scope",{"_index":1365,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setstorage(sessionstorage",{"_index":1367,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh();by",{"_index":1195,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.oauthservice.silentrefreshredirecturi",{"_index":1166,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["this.oauthservice.tokenendpoint",{"_index":1446,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":939,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["this.oauthservice.trylogin",{"_index":1087,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.trylogin().then(_",{"_index":1316,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.oauthservice.userinfoendpoint",{"_index":1450,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.parsequerystring(hash",{"_index":624,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["this.router.navigate",{"_index":1317,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.tobytearrayasstring(result",{"_index":333,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["this.validatesignature(params",{"_index":305,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["those",{"_index":1146,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["three",{"_index":923,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["through",{"_index":404,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["throw",{"_index":109,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["throwerror",{"_index":590,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["throwerror(err",{"_index":591,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["time",{"_index":242,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["timeout",{"_index":159,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["timeout(wait_for_token_received",{"_index":199,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["timeoutfactor",{"_index":709,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{}}}],["timer",{"_index":1293,"title":{},"body":{"additional-documentation/events.html":{}}}],["timespan",{"_index":1191,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["timestamp",{"_index":245,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["tobytearrayasstring",{"_index":225,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["tobytearrayasstring(hexstring",{"_index":249,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["together",{"_index":705,"title":{},"body":{"changelog.html":{},"additional-documentation/server-side-rendering.html":{}}}],["token",{"_index":193,"title":{"additional-documentation/refreshing-a-token.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["token's",{"_index":1198,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["token(s",{"_index":389,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["token_endpoint",{"_index":454,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_methods_supported",{"_index":455,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_signing_alg_values_supported",{"_index":456,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_error",{"_index":507,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_expires",{"_index":515,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["token_received",{"_index":198,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["token_refresh_error",{"_index":510,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refreshed",{"_index":509,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_type",{"_index":442,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_validation_error",{"_index":514,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tokenhash",{"_index":88,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.length",{"_index":96,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.substr(0",{"_index":95,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenresponse",{"_index":441,"title":{"interfaces/TokenResponse.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["tokens",{"_index":83,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["tokenvalidationhandler",{"_index":394,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["tokenvalidator",{"_index":1320,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["tort",{"_index":1060,"title":{},"body":{"license.html":{}}}],["transmit",{"_index":1435,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["transmitted",{"_index":1257,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["transmitting",{"_index":1213,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["tries",{"_index":1371,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["triggers",{"_index":1207,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{}}}],["true",{"_index":93,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["trust",{"_index":1426,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["try",{"_index":813,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["trylogin",{"_index":340,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["ts",{"_index":1366,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["tsickle",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1393,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["tutorial",{"_index":987,"title":{},"body":{"index.html":{}}}],["tutorials",{"_index":986,"title":{},"body":{"index.html":{}}}],["two",{"_index":1322,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["type",{"_index":40,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["typealiases",{"_index":1071,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":167,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{}}}],["ui_locales_supported",{"_index":480,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["until",{"_index":777,"title":{},"body":{"index.html":{}}}],["up",{"_index":929,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["update",{"_index":846,"title":{},"body":{"index.html":{}}}],["uri",{"_index":1161,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["url",{"_index":180,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["url.startswith(u",{"_index":179,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["urlhelperservice",{"_index":553,"title":{"injectables/UrlHelperService.html":{}},"body":{"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{}}}],["urls",{"_index":575,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["use",{"_index":18,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usecase",{"_index":925,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["useclass",{"_index":567,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["used",{"_index":349,"title":{},"body":{"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-password-flow.html":{}}}],["usefactory",{"_index":566,"title":{},"body":{"modules/OAuthModule.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usehash",{"_index":1312,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["user",{"_index":446,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["user's",{"_index":1453,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["user_profile_load_error",{"_index":506,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["user_profile_loaded",{"_index":505,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["userinfo",{"_index":448,"title":{"interfaces/UserInfo.html":{}},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["userinfo_encryption_alg_values_supported",{"_index":469,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_encryption_enc_values_supported",{"_index":470,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_endpoint",{"_index":457,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_signing_alg_values_supported",{"_index":468,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["username/password",{"_index":876,"title":{},"body":{"index.html":{}}}],["username/passwort",{"_index":955,"title":{},"body":{"index.html":{}}}],["users",{"_index":1355,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["uses",{"_index":398,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usevalue",{"_index":568,"title":{},"body":{"modules/OAuthModule.html":{}}}],["using",{"_index":36,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["v",{"_index":650,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["valid",{"_index":319,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{}}}],["validate",{"_index":82,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validateathash",{"_index":16,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(params",{"_index":56,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(validationparams",{"_index":85,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validated",{"_index":382,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{}}}],["validates",{"_index":59,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validatesignature",{"_index":26,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validatesignature(params",{"_index":252,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["validatesignature(validationparams",{"_index":65,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validating",{"_index":484,"title":{},"body":{"classes/NullValidationHandler.html":{},"changelog.html":{},"index.html":{}}}],["validation",{"_index":211,"title":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["validation/crypto",{"_index":119,"title":{},"body":{"classes/CryptoHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/jwks",{"_index":210,"title":{},"body":{"classes/JwksValidationHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/null",{"_index":482,"title":{},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/validation",{"_index":7,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"modules/OAuthModule.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validationhandler",{"_index":12,"title":{"classes/ValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validationhandlerclass",{"_index":544,"title":{},"body":{"modules/OAuthModule.html":{}}}],["validationoptions",{"_index":311,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["validationparams",{"_index":57,"title":{"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validations",{"_index":867,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/original-config-api.html":{}}}],["valuetohash",{"_index":42,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/CryptoHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["var",{"_index":261,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["variables",{"_index":1074,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1387,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["versatility",{"_index":975,"title":{},"body":{"index.html":{}}}],["version",{"_index":668,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["via",{"_index":694,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["vital",{"_index":1108,"title":{},"body":{"additional-documentation/code-flow-+-pcke.html":{}}}],["void",{"_index":396,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["voucher",{"_index":928,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/using-password-flow.html":{}}}],["wait_for_token_received",{"_index":170,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":385,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["warn",{"_index":529,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["warn(message",{"_index":412,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["warning",{"_index":1329,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["warranties",{"_index":1045,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1040,"title":{},"body":{"license.html":{}}}],["way",{"_index":1236,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["we've",{"_index":808,"title":{},"body":{"index.html":{}}}],["web",{"_index":215,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["webcomponents/custom",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["webhttpurlencodingcodec",{"_index":635,"title":{"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["webpack",{"_index":807,"title":{},"body":{"index.html":{}}}],["well",{"_index":403,"title":{},"body":{"classes/LoginOptions.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/callback-after-login.html":{}}}],["when/some",{"_index":861,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":1283,"title":{},"body":{"additional-documentation/events.html":{}}}],["whether",{"_index":1057,"title":{},"body":{"license.html":{}}}],["white",{"_index":1222,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["window.location.hash",{"_index":618,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["window.location.origin",{"_index":916,"title":{},"body":{"index.html":{},"additional-documentation/code-flow-+-pcke.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["within",{"_index":1373,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["without",{"_index":1018,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["working",{"_index":1209,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{}}],["works",{"_index":1467,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["workshops",{"_index":1000,"title":{},"body":{"index.html":{}}}],["write",{"_index":1230,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ws02",{"_index":1384,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["yes",{"_index":531,"title":{},"body":{"classes/OAuthLogger.html":{},"injectables/UrlHelperService.html":{}}}],["you've",{"_index":942,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":1417,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["zone.js",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1068,"title":{},"body":{"overview.html":{}}}],["zum",{"_index":956,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractValidationHandler.html":{"url":"classes/AbstractValidationHandler.html","title":"class - AbstractValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                This abstract implementation of ValidationHandler already implements\nthe method validateAtHash. However, to make use of it,\nyou have to override the method calcHash.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                    Async\n                                validateAtHash\n                            \n                            \n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            inferHashAlgorithm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inferHashAlgorithm(jwtHeader: object)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:69\n                \n            \n\n\n            \n                \n                    Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jwtHeader\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id_token's parsed header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(params: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:44\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:39\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from \"../base64-helper\";\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let atHash = base64UrlEncode(leftMostHalf);\n\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptoHandler.html":{"url":"classes/CryptoHandler.html","title":"class - CryptoHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptoHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/crypto-handler.ts\n        \n\n            \n                Description\n            \n            \n                Abstraction for crypto algorithms\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                calcHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/crypto-handler.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CryptoHandler {\n\n    abstract calcHash(valueToHash: string, algorithm: string): Promise;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/DefaultOAuthInterceptor.html":{"url":"interceptors/DefaultOAuthInterceptor.html","title":"interceptor - DefaultOAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  DefaultOAuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/default-oauth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authStorage: OAuthStorage, oAuthService: OAuthService, errorHandler: OAuthResourceServerErrorHandler, moduleConfig: OAuthModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authStorage\n                                                  \n                                                        \n                                                                        OAuthStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        oAuthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        OAuthResourceServerErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleConfig\n                                                  \n                                                        \n                                                                        OAuthModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, of, merge } from 'rxjs';\nimport { catchError, filter, map, take, mergeMap, timeout } from 'rxjs/operators';\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\nimport { OAuthModuleConfig } from '../oauth-module.config';\nimport { OAuthStorage } from '../types';\nimport { OAuthService } from '../oauth-service';\n\nconst WAIT_FOR_TOKEN_RECEIVED = 1000;\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authStorage: OAuthStorage,\n        private oAuthService: OAuthService,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) { }\n\n    private checkUrl(url: string): boolean {\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\n        }\n\n        if (this.moduleConfig.resourceServer.allowedUrls) {\n            return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        }\n\n        return true;\n    }\n\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const url = req.url.toLowerCase();\n\n\n    if (!this.moduleConfig) {\n      return next.handle(req);\n    }\n    if (!this.moduleConfig.resourceServer) {\n      return next.handle(req);\n    }\n    if (this.moduleConfig.resourceServer.allowedUrls && !this.checkUrl(url)) {\n      return next.handle(req);\n    }\n\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n    if (!sendAccessToken) {\n      return next\n        .handle(req)\n        .pipe(catchError(err => this.errorHandler.handleError(err)));\n    }\n\n    return merge(\n      of(this.oAuthService.getAccessToken()).pipe(\n        filter(token => token ? true : false),\n      ),\n      this.oAuthService.events.pipe(\n        filter(e => e.type === 'token_received'),\n        timeout(WAIT_FOR_TOKEN_RECEIVED),\n        map(_ => this.oAuthService.getAccessToken()),\n      ),\n    ).pipe(\n      take(1),\n      mergeMap(token => {\n        if (token) {\n          const header = 'Bearer ' + token;\n          const headers = req.headers.set('Authorization', header);\n          req = req.clone({ headers });\n        }\n\n        return next\n          .handle(req)\n          .pipe(catchError(err => this.errorHandler.handleError(err)));\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwksValidationHandler.html":{"url":"classes/JwksValidationHandler.html","title":"class - JwksValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwksValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/jwks-validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                Validates the signature of an id_token against one\nof the keys of an JSON Web Key Set (jwks).\nThis jwks can be provided by the discovery document.\n\n            \n\n            \n                Extends\n            \n            \n                        AbstractValidationHandler\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowedAlgorithms\n                            \n                            \n                                gracePeriodInSec\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcHash\n                            \n                            \n                                toByteArrayAsString\n                            \n                            \n                                validateSignature\n                            \n                            \n                                    Protected\n                                    Abstract\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                    Async\n                                validateAtHash\n                            \n                            \n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowedAlgorithms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'HS256',\n    'HS384',\n    'HS512',\n    'RS256',\n    'RS384',\n    'RS512',\n    'ES256',\n    'ES384',\n    'PS256',\n    'PS384',\n    'PS512'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:21\n                            \n                        \n\n                \n                    \n                        Allowed algorithms\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gracePeriodInSec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 600\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:39\n                            \n                        \n\n                \n                    \n                        Time period in seconds the timestamp in the signature can\ndiffer from the current time.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \ncalcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toByteArrayAsString\n                        \n                        \n                    \n                \n            \n            \n                \ntoByteArrayAsString(hexString: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hexString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateSignature(params: ValidationParams, retry)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    retry\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            calcHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:86\n\n                \n            \n\n\n            \n                \n                    Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueToHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    algorithm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            inferHashAlgorithm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inferHashAlgorithm(jwtHeader: object)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:69\n\n                \n            \n\n\n            \n                \n                    Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jwtHeader\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id_token's parsed header\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(params: ValidationParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:44\n\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractValidationHandler\n\n                \n            \n            \n                \n                        Defined in         AbstractValidationHandler:39\n\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractValidationHandler,\n  ValidationParams\n} from './validation-handler';\n\n// declare var require: any;\n// let rs = require('jsrsasign');\n\nimport * as rs from 'jsrsasign';\n\n/**\n * Validates the signature of an id_token against one\n * of the keys of an JSON Web Key Set (jwks).\n *\n * This jwks can be provided by the discovery document.\n */\nexport class JwksValidationHandler extends AbstractValidationHandler {\n  /**\n   * Allowed algorithms\n   */\n  allowedAlgorithms: string[] = [\n    'HS256',\n    'HS384',\n    'HS512',\n    'RS256',\n    'RS384',\n    'RS512',\n    'ES256',\n    'ES384',\n    'PS256',\n    'PS384',\n    'PS512'\n  ];\n\n  /**\n   * Time period in seconds the timestamp in the signature can\n   * differ from the current time.\n   */\n  gracePeriodInSec = 600;\n\n  validateSignature(params: ValidationParams, retry = false): Promise {\n    if (!params.idToken) throw new Error('Parameter idToken expected!');\n    if (!params.idTokenHeader)\n      throw new Error('Parameter idTokenHandler expected.');\n    if (!params.jwks) throw new Error('Parameter jwks expected!');\n\n    if (\n      !params.jwks['keys'] ||\n      !Array.isArray(params.jwks['keys']) ||\n      params.jwks['keys'].length === 0\n    ) {\n      throw new Error('Array keys in jwks missing!');\n    }\n\n    // console.debug('validateSignature: retry', retry);\n\n    let kid: string = params.idTokenHeader['kid'];\n    let keys: object[] = params.jwks['keys'];\n    let key: object;\n\n    let alg = params.idTokenHeader['alg'];\n\n    if (kid) {\n      key = keys.find(k => k['kid'] === kid /* && k['use'] === 'sig' */);\n    } else {\n      let kty = this.alg2kty(alg);\n      let matchingKeys = keys.filter(\n        k => k['kty'] === kty && k['use'] === 'sig'\n      );\n\n      /*\n            if (matchingKeys.length == 0) {\n                let error = 'No matching key found.';\n                console.error(error);\n                return Promise.reject(error);\n            }*/\n      if (matchingKeys.length > 1) {\n        let error =\n          'More than one matching key found. Please specify a kid in the id_token header.';\n        console.error(error);\n        return Promise.reject(error);\n      } else if (matchingKeys.length === 1) {\n        key = matchingKeys[0];\n      }\n    }\n\n    if (!key && !retry && params.loadKeys) {\n      return params\n        .loadKeys()\n        .then(loadedKeys => (params.jwks = loadedKeys))\n        .then(_ => this.validateSignature(params, true));\n    }\n\n    if (!key && retry && !kid) {\n      let error = 'No matching key found.';\n      console.error(error);\n      return Promise.reject(error);\n    }\n\n    if (!key && retry && kid) {\n      let error =\n        'expected key not found in property jwks. ' +\n        'This property is most likely loaded with the ' +\n        'discovery document. ' +\n        'Expected key id (kid): ' +\n        kid;\n\n      console.error(error);\n      return Promise.reject(error);\n    }\n\n    let keyObj = rs.KEYUTIL.getKey(key);\n    let validationOptions = {\n      alg: this.allowedAlgorithms,\n      gracePeriod: this.gracePeriodInSec\n    };\n    let isValid = rs.KJUR.jws.JWS.verifyJWT(\n      params.idToken,\n      keyObj,\n      validationOptions\n    );\n\n    if (isValid) {\n      return Promise.resolve();\n    } else {\n      return Promise.reject('Signature not valid');\n    }\n  }\n\n  private alg2kty(alg: string) {\n    switch (alg.charAt(0)) {\n      case 'R':\n        return 'RSA';\n      case 'E':\n        return 'EC';\n      default:\n        throw new Error('Cannot infer kty from alg: ' + alg);\n    }\n  }\n\n  calcHash(valueToHash: string, algorithm: string): Promise {\n    let hashAlg = new rs.KJUR.crypto.MessageDigest({ alg: algorithm });\n    let result = hashAlg.digestString(valueToHash);\n    let byteArrayAsString = this.toByteArrayAsString(result);\n    return Promise.resolve(byteArrayAsString);\n  }\n\n  toByteArrayAsString(hexString: string) {\n    let result = '';\n    for (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOptions.html":{"url":"classes/LoginOptions.html","title":"class - LoginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Additional options that can be passt to tryLogin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customHashFragment\n                            \n                            \n                                    Optional\n                                disableOAuth2StateCheck\n                            \n                            \n                                    Optional\n                                onLoginError\n                            \n                            \n                                    Optional\n                                onTokenReceived\n                            \n                            \n                                    Optional\n                                preventClearHashAfterLogin\n                            \n                            \n                                    Optional\n                                validationHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            customHashFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:33\n                            \n                        \n\n                \n                    \n                        A custom hash fragment to be used instead of the\nactual one. This is used for silent refreshes, to\npass the iframes hash fragment to this method.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            disableOAuth2StateCheck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:43\n                            \n                        \n\n                \n                    \n                        Set this to true to disable the oauth2 state\ncheck which is a best practice to avoid\nsecurity attacks.\nAs OIDC defines a nonce check that includes\nthis, this can be set to true when only doing\nOIDC.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onLoginError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:26\n                            \n                        \n\n                \n                    \n                        Called when tryLogin detects that the auth server\nincluded an error message into the hash fragment.\nDeprecated:  Use property events on OAuthService instead.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            onTokenReceived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:11\n                            \n                        \n\n                \n                    \n                        Is called, after a token has been received and\nsuccessfully validated.\nDeprecated:  Use property events on OAuthService instead.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            preventClearHashAfterLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:50\n                            \n                        \n\n                \n                    \n                        Normally, you want to clear your hash fragment after\nthe lib read the token(s) so that they are not displayed\nanymore in the url. If not, set this to true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validationHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:18\n                            \n                        \n\n                \n                    \n                        Hook, to validate the received tokens.\nDeprecated:  Use property tokenValidationHandler on OAuthService instead.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullValidationHandler.html":{"url":"classes/NullValidationHandler.html","title":"class - NullValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/null-validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                A validation handler that isn't validating nothing.\nCan be used to skip validation (at your own risk).\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateAtHash\n                            \n                            \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/null-validation-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationHandler, ValidationParams } from './validation-handler';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n  validateSignature(validationParams: ValidationParams): Promise {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams: ValidationParams): Promise {\n    return Promise.resolve(true);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorEvent.html":{"url":"classes/OAuthErrorEvent.html","title":"class - OAuthErrorEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, reason: object, params: object)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reason\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthEvent.html":{"url":"classes/OAuthEvent.html","title":"class - OAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthInfoEvent.html":{"url":"classes/OAuthInfoEvent.html","title":"class - OAuthInfoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthInfoEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthLogger.html":{"url":"classes/OAuthLogger.html","title":"class - OAuthLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Defines the logging interface the OAuthService uses\ninternally. Is compatible with the console object,\nbut you can provide your own implementation as well\nthrough dependency injection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                debug\n                            \n                            \n                                    Abstract\n                                error\n                            \n                            \n                                    Abstract\n                                info\n                            \n                            \n                                    Abstract\n                                log\n                            \n                            \n                                    Abstract\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(message?: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OAuthModule.html":{"url":"modules/OAuthModule.html","title":"module - OAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    OAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/angular-oauth-oidic.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OAuthModuleConfig, validationHandlerClass)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/angular-oauth-oidic.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OAuthModuleConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    validationHandlerClass\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        NullValidationHandler\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { OAuthStorage, OAuthLogger } from './types';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { OAuthService } from './oauth-service';\nimport { UrlHelperService } from './url-helper.service';\n\nimport { OAuthModuleConfig } from './oauth-module.config';\nimport {\n  OAuthResourceServerErrorHandler,\n  OAuthNoopResourceServerErrorHandler\n} from './interceptors/resource-server-error-handler';\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\nimport { ValidationHandler } from './token-validation/validation-handler';\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\nimport { createDefaultLogger, createDefaultStorage } from './factories';\nimport { CryptoHandler } from './token-validation/crypto-handler';\nimport { JwksValidationHandler } from './token-validation/jwks-validation-handler';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: []\n})\nexport class OAuthModule {\n  static forRoot(\n    config: OAuthModuleConfig = null,\n    validationHandlerClass = NullValidationHandler\n  ): ModuleWithProviders {\n    return {\n      ngModule: OAuthModule,\n      providers: [\n        OAuthService,\n        UrlHelperService,\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\n        { provide: ValidationHandler, useClass: validationHandlerClass},\n        { provide: CryptoHandler, useClass: JwksValidationHandler },\n        {\n          provide: OAuthResourceServerErrorHandler,\n          useClass: OAuthNoopResourceServerErrorHandler\n        },\n        { provide: OAuthModuleConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: DefaultOAuthInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthModuleConfig.html":{"url":"classes/OAuthModuleConfig.html","title":"class - OAuthModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resourceServer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OAuthResourceServerConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthNoopResourceServerErrorHandler.html":{"url":"classes/OAuthNoopResourceServerErrorHandler.html","title":"class - OAuthNoopResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthNoopResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OAuthResourceServerErrorHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(err: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerConfig.html":{"url":"classes/OAuthResourceServerConfig.html","title":"class - OAuthResourceServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allowedUrls\n                            \n                            \n                                    Optional\n                                customUrlValidation\n                            \n                            \n                                sendAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            allowedUrls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:11\n                            \n                        \n\n                \n                    \n                        Urls for which calls should be intercepted.\nIf there is an ResourceServerErrorHandler registered, it is used for them.\nIf sendAccessToken is set to true, the access_token is send to them too.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            customUrlValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendAccessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/oauth-module.config.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerErrorHandler.html":{"url":"classes/OAuthResourceServerErrorHandler.html","title":"class - OAuthResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthStorage.html":{"url":"classes/OAuthStorage.html","title":"class - OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Defines a simple storage that can be used for\nstoring the tokens at client side.\nIs compatible to localStorage and sessionStorage,\nbut you can also create your own implementations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getItem\n                            \n                            \n                                    Abstract\n                                removeItem\n                            \n                            \n                                    Abstract\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            removeItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItem(key: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/types.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthSuccessEvent.html":{"url":"classes/OAuthSuccessEvent.html","title":"class - OAuthSuccessEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthSuccessEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'received_first_token'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OidcDiscoveryDoc.html":{"url":"interfaces/OidcDiscoveryDoc.html","title":"interface - OidcDiscoveryDoc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OidcDiscoveryDoc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents an OpenID Connect discovery document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        acr_values_supported\n                                \n                                \n                                        authorization_endpoint\n                                \n                                \n                                        check_session_iframe\n                                \n                                \n                                        claim_types_supported\n                                \n                                \n                                        claims_parameter_supported\n                                \n                                \n                                        claims_supported\n                                \n                                \n                                        display_values_supported\n                                \n                                \n                                        end_session_endpoint\n                                \n                                \n                                        grant_types_supported\n                                \n                                \n                                        id_token_encryption_alg_values_supported\n                                \n                                \n                                        id_token_encryption_enc_values_supported\n                                \n                                \n                                        id_token_signing_alg_values_supported\n                                \n                                \n                                        issuer\n                                \n                                \n                                        jwks_uri\n                                \n                                \n                                        registration_endpoint\n                                \n                                \n                                        request_object_signing_alg_values_supported\n                                \n                                \n                                        response_modes_supported\n                                \n                                \n                                        response_types_supported\n                                \n                                \n                                        scopes_supported\n                                \n                                \n                                        service_documentation\n                                \n                                \n                                        subject_types_supported\n                                \n                                \n                                        token_endpoint\n                                \n                                \n                                        token_endpoint_auth_methods_supported\n                                \n                                \n                                        token_endpoint_auth_signing_alg_values_supported\n                                \n                                \n                                        ui_locales_supported\n                                \n                                \n                                        userinfo_encryption_alg_values_supported\n                                \n                                \n                                        userinfo_encryption_enc_values_supported\n                                \n                                \n                                        userinfo_endpoint\n                                \n                                \n                                        userinfo_signing_alg_values_supported\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acr_values_supported\n                                    \n                                \n                                \n                                    \n                                        acr_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorization_endpoint\n                                    \n                                \n                                \n                                    \n                                        authorization_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        check_session_iframe\n                                    \n                                \n                                \n                                    \n                                        check_session_iframe:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claim_types_supported\n                                    \n                                \n                                \n                                    \n                                        claim_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_parameter_supported\n                                    \n                                \n                                \n                                    \n                                        claims_parameter_supported:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_supported\n                                    \n                                \n                                \n                                    \n                                        claims_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_values_supported\n                                    \n                                \n                                \n                                    \n                                        display_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_session_endpoint\n                                    \n                                \n                                \n                                    \n                                        end_session_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grant_types_supported\n                                    \n                                \n                                \n                                    \n                                        grant_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_enc_values_supported\n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        id_token_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks_uri\n                                    \n                                \n                                \n                                    \n                                        jwks_uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration_endpoint\n                                    \n                                \n                                \n                                    \n                                        registration_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request_object_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        request_object_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_modes_supported\n                                    \n                                \n                                \n                                    \n                                        response_modes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_types_supported\n                                    \n                                \n                                \n                                    \n                                        response_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes_supported\n                                    \n                                \n                                \n                                    \n                                        scopes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_documentation\n                                    \n                                \n                                \n                                    \n                                        service_documentation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject_types_supported\n                                    \n                                \n                                \n                                    \n                                        subject_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint\n                                    \n                                \n                                \n                                    \n                                        token_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_methods_supported\n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_methods_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ui_locales_supported\n                                    \n                                \n                                \n                                    \n                                        ui_locales_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_enc_values_supported\n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_endpoint\n                                    \n                                \n                                \n                                    \n                                        userinfo_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_signing_alg_values_supported\n                                    \n                                \n                                \n                                    \n                                        userinfo_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedIdToken.html":{"url":"interfaces/ParsedIdToken.html","title":"interface - ParsedIdToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedIdToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the parsed and validated id_token.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenClaimsJson\n                                \n                                \n                                        idTokenExpiresAt\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        idTokenHeaderJson\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaimsJson\n                                    \n                                \n                                \n                                    \n                                        idTokenClaimsJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiresAt\n                                    \n                                \n                                \n                                    \n                                        idTokenExpiresAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeaderJson\n                                    \n                                \n                                \n                                    \n                                        idTokenHeaderJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceivedTokens.html":{"url":"classes/ReceivedTokens.html","title":"class - ReceivedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReceivedTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the received tokens, the received state\nand the parsed claims from the id-token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Optional\n                                idClaims\n                            \n                            \n                                idToken\n                            \n                            \n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            idClaims\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/types.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the response from the token endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        id_token\n                                \n                                \n                                        refresh_token\n                                \n                                \n                                        scope\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token\n                                    \n                                \n                                \n                                    \n                                        id_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlHelperService.html":{"url":"injectables/UrlHelperService.html","title":"injectable - UrlHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/url-helper.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHashFragmentParams\n                            \n                            \n                                    Public\n                                parseQueryString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHashFragmentParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHashFragmentParams(customHashFragment?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/url-helper.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customHashFragment\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseQueryString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseQueryString(queryString: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/url-helper.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlHelperService {\n  public getHashFragmentParams(customHashFragment?: string): object {\n    let hash = customHashFragment || window.location.hash;\n\n    hash = decodeURIComponent(hash);\n\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n\n    const questionMarkPosition = hash.indexOf('?');\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n\n    return this.parseQueryString(hash);\n  }\n\n  public parseQueryString(queryString: string): object {\n    const data = {};\n    let\n      pairs,\n      pair,\n      separatorIndex,\n      escapedKey,\n      escapedValue,\n      key,\n      value;\n\n    if (queryString === null) {\n      return data;\n    }\n\n    pairs = queryString.split('&');\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the response from the user info endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/types.ts:121\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true.\n   */\n  preventClearHashAfterLogin? = false;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationHandler.html":{"url":"classes/ValidationHandler.html","title":"class - ValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Handlers that are hooked in to\nvalidate tokens.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                validateAtHash\n                            \n                            \n                                    Public\n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            validateAtHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:27\n                \n            \n\n\n            \n                \n                    Validates the at_hash in an id_token against the received access_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            validateSignature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/token-validation/validation-handler.ts:20\n                \n            \n\n\n            \n                \n                    Validates the signature of an id_token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationParams\n                                    \n                                                ValidationParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from \"../base64-helper\";\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let atHash = base64UrlEncode(leftMostHalf);\n\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationParams.html":{"url":"interfaces/ValidationParams.html","title":"interface - ValidationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        jwks\n                                \n                                \n                                        loadKeys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                    \n                                \n                                \n                                    \n                                        jwks:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadKeys\n                                    \n                                \n                                \n                                    \n                                        loadKeys:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { base64UrlEncode } from \"../base64-helper\";\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let atHash = base64UrlEncode(leftMostHalf);\n\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebHttpUrlEncodingCodec.html":{"url":"classes/WebHttpUrlEncodingCodec.html","title":"class - WebHttpUrlEncodingCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebHttpUrlEncodingCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/encoder.ts\n        \n\n            \n                Description\n            \n            \n                This custom encoder allows charactes like +, % and / to be used in passwords\n\n            \n\n\n            \n                Implements\n            \n            \n                            HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeKey\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeKey(k: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decodeValue\n                        \n                        \n                    \n                \n            \n            \n                \ndecodeValue(v: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encodeKey\n                        \n                        \n                    \n                \n            \n            \n                \nencodeKey(k: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encodeValue\n                        \n                        \n                    \n                \n            \n            \n                \nencodeValue(v: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/encoder.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string) {\n    return decodeURIComponent(v);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nLates features\nSee Release Notes\nNew Features in Version 2.1\n\nNew Config API (the original one is still supported)\nNew convenience methods in OAuthService to streamline default tasks:\nsetupAutomaticSilentRefresh()\nloadDiscoveryDocumentAndTryLogin()\n\n\nSingle Sign out through Session Status Change Notification according to the OpenID Connect Session Management specs. This means, you can be notified when the user logs out using at the login provider.\nPossibility to define the ValidationHandler, the Config as well as the OAuthStorage via DI\nBetter structured documentation\n\nNew Features in Version 2\n\nToken Refresh for Implicit Flow by implementing \"silent refresh\"\nValidating the signature of the received id_token\nProviding Events via the observable events.\nThe event token_expires can be used together with a silent refresh to automatically refresh a token when/ before it expires (see also property timeoutFactor).\n\nBreaking Changes in Version 2\n\nThe property oidc defaults to true.\nIf you are just using oauth2, you have to set oidc to false. Otherwise, the validation of the user profile will fail!\nBy default, sessionStorage is used. To use localStorage call method setStorage\nDemands using https as OIDC and OAuth2 relay on it. This rule can be relaxed using the property requireHttps, e. g. for local testing.\nDemands that every url provided by the discovery document starts with the issuer's url. This can be relaxed by using the property strictDiscoveryDocumentValidation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 8.0.2\n        \n            @angular/common : 8.0.2\n        \n            @angular/compiler : 8.0.2\n        \n            @angular/core : 8.0.2\n        \n            @angular/elements : 8.0.2\n        \n            @angular/forms : 8.0.2\n        \n            @angular/platform-browser : 8.0.2\n        \n            @angular/platform-browser-dynamic : 8.0.2\n        \n            @angular/router : 8.0.2\n        \n            @webcomponents/custom-elements : ^1.2.4\n        \n            base64-js : ^1.3.0\n        \n            bootstrap : ^3.3.7\n        \n            jsrsasign : ^8.0.12\n        \n            rxjs : 6.5.2\n        \n            rxjs-compat : ^6.5.2\n        \n            text-encoder-lite : ^1.0.1\n        \n            tsickle : ^0.35.0\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            b64DecodeUnicode   (projects/.../base64-helper.ts)\n                        \n                        \n                            base64UrlEncode   (projects/.../base64-helper.ts)\n                        \n                        \n                            createDefaultLogger   (projects/.../factories.ts)\n                        \n                        \n                            createDefaultStorage   (projects/.../factories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/base64-helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            b64DecodeUnicode\n                        \n                        \n                    \n                \n            \n            \n                \nb64DecodeUnicode(str)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            base64UrlEncode\n                        \n                        \n                    \n                \n            \n            \n                \nbase64UrlEncode(str)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/lib/src/factories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createDefaultLogger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDefaultLogger()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createDefaultStorage\n                        \n                        \n                    \n                \n            \n            \n                \ncreateDefaultStorage()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-oauth2-oidc\nSupport for OAuth 2 and OpenId Connect (OIDC) in Angular.\n\nCredits\n\ngenerator-angular2-library for scaffolding an Angular library\njsrasign until version 5: For validating token signature and for hashing; beginning with version 6, we are using browser APIs to minimize our bundle size\nIdentity Server (used for testing with an .NET/.NET Core Backend)\nKeycloak (Redhat) for testing with Java\n\nResources\n\nSources and Sample:\nhttps://github.com/manfredsteyer/angular-oauth2-oidc\n\nSource Code Documentation\nhttps://manfredsteyer.github.io/angular-oauth2-oidc/docs\n\n\nTested Environment\nSuccessfully tested with Angular 7 and its Router, PathLocationStrategy as well as HashLocationStrategy and CommonJS-Bundling via webpack. At server side we've used IdentityServer (.NET/ .NET Core) and Redhat's Keycloak (Java).\nAngular 6: Use Version 4.x of this library. Version 4.x was tested with Angular 6. You can also try the newer version 5.x of this library which has a much smaller bundle size.\nAngular 5.x or 4.3: If you need support for Angular \nRelease Cycle\n\nWe plan one major release for each Angular version\nWill contain new features\nWill contain bug fixes and PRs\n\n\nCritical Bugfixes on demand\n\nContributions\n\nFeel free to file pull requests\n\nThe closed issues contain some ideas for PRs and enhancements (see labels)\n\nIf you want to contribute to the docs, you can do so in the docs-src folder. Make sure you update summary.json as well. Then generate the docs with the following commands:\nnpm install -g @compodoc/compodoc\nnpm run docs\n\nFeatures\n\nLogging in via Implicit Flow (where a user is redirected to Identity Provider)\nLogging in via Code Flow + PKCE\n\"Logging in\" via Password Flow (where a user enters their password into the client)\nToken Refresh for all supported flows\nAutomatically refreshing a token when/some time before it expires\nQuerying Userinfo Endpoint\nQuerying Discovery Document to ease configuration\nValidating claims of the id_token regarding the specs\nHook for further custom validations\nSingle-Sign-Out by redirecting to the auth-server's logout-endpoint\n\nSample-Auth-Server\nYou can use the OIDC-Sample-Server mentioned in the samples for Testing. It assumes, that your Web-App runs on http://localhost:8080.\nUsername/Password: max/geheim\nclientIds: \n\nspa-demo (implicit flow)\ndemo-resource-owner (resource owner password flow)\n\nredirectUris:\n\nlocalhost:[8080-8089|4200-4202]\nlocalhost:[8080-8089|4200-4202]/index.html\nlocalhost:[8080-8089|4200-4202]/silent-refresh.html\n\nInstalling\nnpm i angular-oauth2-oidc --saveImporting the NgModule\nimport { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n@NgModule({\n  imports: [ \n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent \n  ]\n})\nexport class AppModule {\n}Configuring for Implicit Flow\nThis section shows how to implement login leveraging implicit flow. This is the OAuth2/OIDC flow best suitable for\nSingle Page Application. It sends the user to the Identity Provider's login page. After logging in, the SPA gets tokens.\nThis also allows for single sign on as well as single sign off.\nTo configure the library, the following sample uses the new configuration API introduced with Version 2.1.\nHence, the original API is still supported.\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registered with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}Configure the OAuthService with this config object when the application starts up:\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\nimport { authConfig } from './auth.config';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'flight-app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    constructor(private oauthService: OAuthService) {\n      this.configure();\n    }\n\n    private configure() {\n      this.oauthService.configure(authConfig);\n      this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n      this.oauthService.loadDiscoveryDocumentAndTryLogin();\n    }\n}Implementing a Login Form\nAfter you've configured the library, you just have to call initImplicitFlow to login using OAuth2/ OIDC.\nimport { Component } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\n@Component({\n    templateUrl: \"app/home.html\"\n})\nexport class HomeComponent {\n\n    constructor(private oauthService: OAuthService) {\n    }\n\n    public login() {\n        this.oauthService.initLoginFlow();\n    }\n\n    public logoff() {\n        this.oauthService.logOut();\n    }\n\n    public get name() {\n        let claims = this.oauthService.getIdentityClaims();\n        if (!claims) return null;\n        return claims.given_name;\n    }\n\n}The following snippet contains the template for the login page:\n\n    Hallo\n\n\n    Hallo, {{name}}\n\n\n\n    Login\n\n\n    Logout\n\n\n\n    Username/Passwort zum Testen: max/geheim\nSkipping the Login Form\nIf you don't want to display a login form that tells the user that they are redirected to the identity server, you can use the convenience function this.oauthService.loadDiscoveryDocumentAndLogin(); instead of this.oauthService.loadDiscoveryDocumentAndTryLogin(); when setting up the library. \nThis directly redirects the user to the identity server if there are no valid tokens. \nCalling a Web API with an Access Token\nYou can automate this task by switching sendAccessToken on and by setting allowedUrls to an array with prefixes for the respective URLs. Use lower case for the prefixes.\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})If you need more versatility, you can look in the documentation how to setup a custom interceptor.\nRouting\nIf you use the PathLocationStrategy (which is on by default) and have a general catch-all-route (path: '**') you should be fine. Otherwise look up the section Routing with the HashStrategy in the documentation.\nMore Documentation (!)\nSee the documentation for more information about this library.\nTutorials\n\nTutorial with Demo Servers available online\nAngular Authentication with OpenID Connect and Okta in 20 Minutes\nAdd Authentication to Your Angular PWA\nBuild an Ionic App with User Authentication\nOn-Site Workshops\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Manfred Steyer\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EventType   (projects/.../events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/events.ts\n    \n    \n        \n            \n                \n                    \n                    EventType\n                \n            \n            \n                \n                        \"discovery_document_loaded\" | \"received_first_token\" | \"jwks_load_error\" | \"invalid_nonce_in_state\" | \"discovery_document_load_error\" | \"discovery_document_validation_error\" | \"user_profile_loaded\" | \"user_profile_load_error\" | \"token_received\" | \"token_error\" | \"code_error\" | \"token_refreshed\" | \"token_refresh_error\" | \"silent_refresh_error\" | \"silently_refreshed\" | \"silent_refresh_timeout\" | \"token_validation_error\" | \"token_expires\" | \"session_changed\" | \"session_error\" | \"session_terminated\" | \"logout\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_CONFIG   (projects/.../tokens.ts)\n                        \n                        \n                            WAIT_FOR_TOKEN_RECEIVED   (projects/.../default-oauth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AUTH_CONFIG')\n                        \n                    \n\n\n            \n        \n\n    projects/lib/src/interceptors/default-oauth.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WAIT_FOR_TOKEN_RECEIVED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGetting Started\nPlease find the Getting Started Guide in the README above.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/preserving-state-(like-the-requested-url).html":{"url":"additional-documentation/preserving-state-(like-the-requested-url).html","title":"additional-page - Preserving State (like the Requested URL)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nPreserving State (like the Requested URL)\nWhen calling initImplicitFlow, you can pass an optional state which could be the requested url:\nthis.oauthService.initImplicitFlow('http://www.myurl.com/x/y/z');After login succeeded, you can read this state:\nthis.oauthService.tryLogin({\n    onTokenReceived: (info) => {\n        console.debug('state', info.state);\n    }\n})\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/code-flow-+-pcke.html":{"url":"additional-documentation/code-flow-+-pcke.html","title":"additional-page - Code Flow + PCKE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCode Flow\nSince Version 8, this library also supports code flow and PKCE to align with the current draft of the OAuth 2.0 Security Best Current Practice document. \nTo configure your solution for code flow + PKCE you have to set the responseType to code:\n    import { AuthConfig } from 'angular-oauth2-oidc';\n\n    export const authCodeFlowConfig: AuthConfig = {\n      // Url of the Identity Provider\n      issuer: 'https://demo.identityserver.io',\n\n      // URL of the SPA to redirect the user to after login\n      redirectUri: window.location.origin + '/index.html',\n\n      // The SPA's id. The SPA is registerd with this id at the auth-server\n      // clientId: 'server.code',\n      clientId: 'spa',\n\n      // Just needed if your auth server demands a secret. In general, this\n      // is a sign that the auth server is not configured with SPAs in mind\n      // and it might not enforce further best practices vital for security\n      // such applications.\n      // dummyClientSecret: 'secret',\n\n      responseType: 'code',\n\n      // set the scope for the permissions the client should request\n      // The first four are defined by OIDC. \n      // Important: Request offline_access to get a refresh token\n      // The api scope is a usecase specific one\n      scope: 'openid profile email offline_access api',\n\n      showDebugInformation: true,\n\n      // Not recommented:\n      // disablePKCI: true,\n    };After this, you can initialize the code flow using:\n  this.oauthService.initCodeFlow();There is also a convenience method initLoginFlow which initializes either the code flow or the implicit flow depending on your configuration. \n  this.oauthService.initLoginFlow();Also -- as shown in the readme -- you have to execute the following code when bootstrapping to make the library to fetch the token:\nthis.oauthService.configure(authCodeFlowConfig);\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();\nthis.oauthService.loadDiscoveryDocumentAndTryLogin();\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/refreshing-a-token.html":{"url":"additional-documentation/refreshing-a-token.html","title":"additional-page - Refreshing a Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRefreshing a Token\nThe strategy to use for refreshing your token differs between implicit flow and code flow. Hence, you find here one separate section for both of them.\nThe last section shows how to automate refreshing for both flows.\nRefreshing when using Code Flow (not Implicit Flow!)\n\n\nFor refreshing a token with implicit flow, please see section below!\n\n\nWhen using code flow, you can get an refresh_token. While the original standard DOES NOT allow this for SPAs, the mentioned document proposes to ease this limitation. However, it specifies a list of requirements one should take care about before using refresh_tokens. Please make sure you respect those requirements.\nPlease also note, that you have to request the offline_access scope to get an refresh token.\nTo refresh your token, just call the refresh method:\nthis.oauthService.refresh();Refreshing when using Implicit Flow (not Code Flow!)\nTo refresh your tokens when using implicit flow you can use a silent refresh. This is a well-known solution that compensates the fact that implicit flow does not allow for issuing a refresh token. It uses a hidden iframe to get another token from the auth server. When the user is there still logged in (by using a cookie) it will respond without user interaction and provide new tokens.\nTo use this approach, setup a redirect uri for the silent refresh.\nFor this, you can set the property silentRefreshRedirectUri in the config object:\n// This api will come in the next version\n\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // URL of the SPA to redirect the user after silent refresh\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}As an alternative, you can set the same property directly with the OAuthService:\nthis.oauthService.silentRefreshRedirectUri = window.location.origin + \"/silent-refresh.html\";Please keep in mind that this uri has to be configured at the auth-server too.\nThis file is loaded into the hidden iframe after getting new tokens. Its only task is to send the received tokens to the main application:\n\n\n    \n    parent.postMessage(location.hash, location.origin);\n    \n\nPlease make sure that this file is copied to your output directory by your build task. When using the CLI you can define it as an asset for this. For this, you have to add the following line to the file .angular-cli.json:\n\"assets\": [\n    [...],\n    \"silent-refresh.html\"\n],To perform a silent refresh, just call the following method:\nthis\n    .oauthService\n    .silentRefresh()\n    .then(info => console.debug('refresh ok', info))\n    .catch(err => console.error('refresh error', err));When there is an error in the iframe that prevents the communication with the main application, silentRefresh will give you a timeout. To configure the timespan for this, you can set the property silentRefreshTimeout (msec). The default value is 20.000 (20 seconds).\nAutomatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nthis.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/working-with-httpinterceptors.html":{"url":"additional-documentation/working-with-httpinterceptors.html","title":"additional-page - Working with HttpInterceptors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInterceptors\nSince 3.1 the library uses a default HttpInterceptor that takes care about transmitting the access_token to the resource server and about error handling for security related errors (HTTP status codes 401 and 403) received from the resource server. To put in on, just set sendAccessToken to true and set allowedUrls to an array with prefixes for the respective urls. Use lower case for the prefixes:\nOAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})You can provide an error handler for the urls white listed here by provding a service for the token OAuthResourceServerErrorHandler.\nTo implement such a service, implement the abstract class OAuthResourceServerErrorHandler. The following example shows the default implemantion that just passes the cought error through:\nexport class OAuthNoopResourceServerErrorHandler implements OAuthResourceServerErrorHandler {\n\n    handleError(err: HttpResponse): Observable {\n        return _throw(err);\n    }\n\n}Custom Interceptors\nFeel free to write custom interceptors but keep in mind that injecting the OAuthService into them creates a circular dependency which leads to an error. The easiest way to prevent this is to use the OAuthStorage directly which also provides the access_token:\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport { OAuthResourceServerErrorHandler } from \"./resource-server-error-handler\";\nimport { OAuthModuleConfig } from \"../oauth-module.config\";\n\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authStorage: OAuthStorage,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) {\n    }\n\n    private checkUrl(url: string): boolean {\n        let found = this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        return !!found;\n    }\n\n    public intercept(req: HttpRequest, next: HttpHandler): Observable> {\n\n        let url = req.url.toLowerCase();\n\n        if (!this.moduleConfig) return next.handle(req);\n        if (!this.moduleConfig.resourceServer) return next.handle(req);\n        if (!this.moduleConfig.resourceServer.allowedUrls) return next.handle(req);\n        if (!this.checkUrl(url)) return next.handle(req);\n\n        let sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n        if (sendAccessToken) {\n\n            let token = this.authStorage.getItem('access_token');\n            let header = 'Bearer ' + token;\n\n            let headers = req.headers\n                                .set('Authorization', header);\n\n            req = req.clone({ headers });\n        }\n\n        return next.handle(req).catch(err => this.errorHandler.handleError(err));\n\n    }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/callback-after-login.html":{"url":"additional-documentation/callback-after-login.html","title":"additional-page - Callback after login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCallback after login\nThere is a callback onTokenReceived, that is called after a successful login. In this case, the lib received the access_token as\nwell as the id_token, if it was requested. If there is an id_token, the lib validated it.\nthis.oauthService.tryLogin({\n    onTokenReceived: context => {\n        //\n        // Output just for purpose of demonstration\n        // Don't try this at home ... ;-)\n        //\n        console.debug(\"logged in\");\n        console.debug(context);\n    }\n});\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/custom-query-parameters.html":{"url":"additional-documentation/custom-query-parameters.html","title":"additional-page - Custom Query Parameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCustom Query Parameters\nYou can set the property customQueryParams to a hash with custom parameter that are transmitted when starting implicit flow.\nthis.oauthService.customQueryParams = {\n    'tenant': '4711',\n    'otherParam': 'someValue'\n};\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/events.html":{"url":"additional-documentation/events.html","title":"additional-page - Events","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nEvents\nThe library informs you about its tasks and state using events.\nThis is an Observable which publishes a stream of events as they occur in the service.\nYou can log these events to the console for debugging information.\nA short snippet you could use:\nthis.oauthService.events.subscribe(e => console.log(e));Or a longer, more extensive version that logs them at different levels:\nimport { OAuthErrorEvent } from 'angular-oauth2-oidc';\n\n// ...\n\nthis.authService.events.subscribe(event => {\n  if (event instanceof OAuthErrorEvent) {\n    console.error(event);\n  } else {\n    console.warn(event);\n  }\n});Here's a list of the main events you might encounter:\n\ndiscovery_document_loaded is published whenever the service has retrieved the openid configuration and successfully saved the jwks information\ninvalid_nonce_in_state is published during tryLogin, when an access token has been requested and the state check was not disabled via the options, only in case the nonce is not as expected (see OAuth2 spec for more details about the nonce)\nuser_profile_loaded is published just before loadUserProfile() successfully resolves\ntoken_received is published whenever the requested token(s) have been successfully received and stored\nsilently_refreshed is published when the silent refresh timer has gone off and the library has also successfully refreshed the tokens (only applicable to Implicit Flow)\nsilent_refresh_timeout is published if the silent refresh timer has gone off but it takes too long to successfully refresh\nsession_error will only be published if the session checks encounter an error\n\nFor a full list of available events see the string based enum in the file events.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/routing-with-the-hashstrategy.html":{"url":"additional-documentation/routing-with-the-hashstrategy.html","title":"additional-page - Routing with the HashStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nRouting with the HashStrategy\nIf you are leveraging the LocationStrategy which the Router is using by default, you can skip this section.\nWhen using the HashStrategy for Routing, the Router will override the received hash fragment with the tokens when it performs it initial navigation. This prevents the library from reading them. To avoid this, disable initial navigation when setting up the routes for your root module:\nexport let AppRouterModule = RouterModule.forRoot(APP_ROUTES, {\n    useHash: true,\n    initialNavigation: false\n});After tryLogin did its job, you can manually perform the initial navigation:\nthis.oauthService.tryLogin().then(_ => {\n    this.router.navigate(['/']);\n})Another solution is the use a redirect uri that already contains the initial route. In this case the router will not override it. An example for such a redirect uri is\n    http://localhost:8080/#/home\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adapt-id_token-validation.html":{"url":"additional-documentation/adapt-id_token-validation.html","title":"additional-page - Adapt id_token Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfigure/ Adapt id_token Validation\nYou can hook in an implementation of the interface TokenValidator to validate the signature of the received id_token and its at_hash property. This packages provides two implementations:\n\nJwksValidationHandler\nNullValidationHandler\n\nThe former one validates the signature against public keys received via the discovery document (property jwks) and the later one skips the validation on client side.\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\n\n[...]\n\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();In cases where no ValidationHandler is defined, you receive a warning on the console. This means that the library wants you to explicitly decide on this.\nDependency Injection\nYou can also setup a ValidationHandler by leveraging dependency injection:\n[...]\nproviders: [\n    { provide: ValidationHandler, useClass: JwksValidationHandler },\n],\n[...]\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/session-checks.html":{"url":"additional-documentation/session-checks.html","title":"additional-page - Session Checks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSession Checks\nBeginning with version 2.1, you can receive a notification when the user signs out with the identity provider.\nThis is implemented as defined by the OpenID Connect Session Management 1.0 spec.\nWhen this option is activated, the library also automatically ends your local session. This means, the current tokens\nare deleted by calling logOut. In addition to that, the library sends a session_terminated event, you can register\nfor to perform a custom action.\nPlease note that this option can only be used when also the identity provider in question supports it.\nConfiguration\nTo activate the session checks that leads to the mentioned notifications, set the configuration property\nsessionChecksEnabled:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n  redirectUri: window.location.origin + '/index.html',\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n  clientId: 'spa-demo',\n  scope: 'openid profile email voucher',\n\n  // Activate Session Checks:\n  sessionChecksEnabled: true,\n}Events\nTo get notified, you can hook up for the event session_terminated:\nthis.oauthService.events.pipe(filter(e => e.type === 'session_terminated')).subscribe(e => {\n  console.debug('Your session has been terminated!');\n})\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-side-rendering.html":{"url":"additional-documentation/server-side-rendering.html","title":"additional-page - Server Side Rendering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nServer Side Rendering\nThere is a great blog post that shows how this library can be used together with server side rendering:\nhttps://medium.com/lankapura/angular-server-side-rendering-for-authenticated-users-a021627fd9d3The sample for this can be found here:\nhttps://github.com/lankaapura/Angular-AspNetCore-Idsvr\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{"url":"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html","title":"additional-page - Configure Library for Implicit Flow without discovery document","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfigure Library for Implicit Flow (without discovery document)\nWhen you don't have a discovery document, you have to configure more properties manually:\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.loginUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/authorize\"; //Id-Provider?\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // To also enable single-sign-out set the url for your auth-server's logout-endpoint here\n        this.oauthService.logoutUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/endsession\";\n\n        // This method just tries to parse the token(s) within the url when\n        // the auth-server redirects the user back to the web-app\n        // It doesn't send the user the the login page\n        this.oauthService.tryLogin();\n\n\n  }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{"url":"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html","title":"additional-page - Using an ID Provider that Fails Discovery Document Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDiscovery Document Validation\nThe configuration parameter strictDiscoveryDocumentValidation is set true by default. This ensures that all of the endpoints provided via the ID Provider discovery document share the same base URL as the issuer parameter.\nSeveral ID Providers (i.e. Google OpenID, WS02-IS, PingOne) provide different domains or path params for various endpoints in the discovery document. These providers may still adhere to the OpenID Connect Provider Configuration specification, but will fail to pass this library's discovery document validation.\nTo use this library with an ID Provider that does not maintain a consistent base URL across the discovery document endpoints, set the strictDiscoveryDocumentValidation parameter to false in your configuration:\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n\n  // turn off validation that discovery document endpoints start with the issuer url defined above\n  strictDiscoveryDocumentValidation: false\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-systemjs.html":{"url":"additional-documentation/using-systemjs.html","title":"additional-page - Using SystemJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUsing SystemJS\nThanks to Kevin BEAUGRAND for adding this information regarding SystemJS.\nSystem.config({\n...\n meta: {\n            'angular-oauth2-oidc': {\n                deps: ['jsrsasign']\n            },\n        }\n...\n});Also thanks to ppanthony for sharing his SystemJS config:\n'angular-oauth2-oidc': {\n    main: 'angular-oauth2-oidc.umd.js',\n    format: 'cjs',\n    defaultExtension: 'js',\n    map: {\n        'jsrsasign': '/node_modules/jsrsasign/lib/jsrsasign',\n    },\n    meta: {\n        'angular-oauth2-oidc': {\n            deps: ['require','jsrsasign']\n        },\n    }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/original-config-api.html":{"url":"additional-documentation/original-config-api.html","title":"additional-page - Original Config API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nOriginal Config API\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. The SPA is registerd with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        // The first three are defined by OIDC. The 4th is a usecase-specific one\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // The name of the auth-server that has to be mentioned within the token\n        this.oauthService.issuer = \"https://steyer-identity-server.azurewebsites.net/identity\";\n\n        // Load Discovery Document and then try to login the user\n        this.oauthService.loadDiscoveryDocument().then(() => {\n\n            // This method just tries to parse the token(s) within the url when\n            // the auth-server redirects the user back to the web-app\n            // It dosn't send the user the the login page\n            this.oauthService.tryLogin();\n\n        });\n\n  }\n\n}If you find yourself receiving errors related to discovery document validation, your ID Provider may have OAuth2 endpoints that do not use the issuer value as a consistent base URL. You can turn off strict validation of discovery document endpoints for this scenario. See Discovery Document Validation for details.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-password-flow.html":{"url":"additional-documentation/using-password-flow.html","title":"additional-page - Using Password Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nUsing Password-Flow\nThis section shows how to use the password flow, which demands the user to directly enter his or her password into the client.\nPlease note that from an OAuth2/OIDC perspective, the implicit flow is better suited for logging into a SPA and the flow described here should only be used,\nwhen a) there is a strong trust relations ship between the client and the auth server and when b) other flows are not possible.\nConfigure Library for Password Flow (using discovery document)\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease not, that this configuration is quite similar to the one for the implcit flow.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        // The auth-server used here only returns a refresh token (see below), when the scope offline_access is requested\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n        // Load Discovery Document and then try to login the user\n        let url = 'https://steyer-identity-server.azurewebsites.net/identity/.well-known/openid-configuration';\n        this.oauthService.loadDiscoveryDocument(url).then(() => {\n            // Do what ever you want here\n        });\n\n  }\n\n}Configure Library for Password Flow (without discovery document)\nIn cases where you don't have an OIDC based discovery document you have to configure some more properties manually:\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.tokenEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/token\";\n\n        // Url with user info endpoint\n        // This endpont is described by OIDC and provides data about the loggin user\n        // This sample uses it, because we don't get an id_token when we use the password flow\n        // If you don't want this lib to fetch data about the user (e. g. id, name, email) you can skip this line\n        this.oauthService.userinfoEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/userinfo\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n  }\n\n}Fetching an Access Token by providing the current user's credentials\nthis.oauthService.fetchTokenUsingPasswordFlow('max', 'geheim').then((resp) => {\n\n      // Loading data about the user\n      return this.oauthService.loadUserProfile();\n\n}).then(() => {\n\n      // Using the loaded user data\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n\n})There is also a short form for fetching the token and loading the user profile:\nthis.oauthService.fetchTokenUsingPasswordFlowAndLoadUserProfile('max', 'geheim').then(() => {\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n});Refreshing the current Access Token\nUsing the password flow you MIGHT get a refresh token (which isn't the case with the implicit flow by design!). You can use this token later to get a new access token, e. g. after it expired.\nthis.oauthService.refreshToken().then(() => {\n          console.debug('ok');\n})\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-custom-oauthstorage.html":{"url":"additional-documentation/configure-custom-oauthstorage.html","title":"additional-page - Configure custom OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConfigure custom OAuthStorage\nThis library uses sessionStorage as the default storage provider. You can customize this by using localStorage or your own storage solution.\nUsing localStorage\nIf  you want to use localStorage instead of sessionStorage, you can add a provider to your AppModule. This works as follows:\nimport { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n// We need a factory, since localStorage is not available during AOT build time.\nexport function storageFactory() : OAuthStorage {\n  return localStorage\n}\n\n@NgModule({\n  imports: [ \n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent \n  ],\n  providers: [\n    { provide: OAuthStorage, useFactory: storageFactory }\n  ]\n})\nexport class AppModule {\n}Custom storage solution\nIf you want to use a custom storage solution, you can extend the OAuthStorage class. Documentation can be found here. Then add it as a provider, just like in the localStorage example above.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
